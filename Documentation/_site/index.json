{
  "api/MaintenanceChronicle.Api.Controllers.AuthController.html": {
    "href": "api/MaintenanceChronicle.Api.Controllers.AuthController.html",
    "title": "Class AuthController | MaintenanceChronicleApiDocumantation",
    "keywords": "Class AuthController Namespace MaintenanceChronicle.Api.Controllers Assembly MaintenanceChronicle.Api.dll [ApiController] public class AuthController : ControllerBase Inheritance object ControllerBase AuthController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthController(IMediator) public AuthController(IMediator mediator) Parameters mediator IMediator Methods GenerateToken(string) Generates a token for the user to confirm their email [HttpGet(\"api/v1/auth/generateEmailConfirmToken\")] public Task<ActionResult<string>> GenerateToken(string email) Parameters email string Users email that specifies which user should get the token Returns Task<ActionResult<string>> Login(LoginDto) Logs in the user with the given information [HttpPost(\"api/v1/auth/login\")] public Task<ActionResult> Login(LoginDto loginDto) Parameters loginDto LoginDto Email and password to login user Returns Task<ActionResult> Register(RegisterUserDto) Registers a new user with the given information. The user is not logged in after registration [HttpPost(\"api/v1/auth/register\")] public Task<ActionResult<Guid>> Register(RegisterUserDto registerUserDto) Parameters registerUserDto RegisterUserDto Information needed to create new user with specified password Returns Task<ActionResult<Guid>> RegisterUserTenant(UserTenantDto) Registers a new user and tenant with the given information. The user is not logged in after registration [HttpPost(\"api/v1/auth/register-user-tenant\")] public Task<ActionResult<Guid>> RegisterUserTenant(UserTenantDto userTenantDto) Parameters userTenantDto UserTenantDto Information needed to create new user with specified password and tenant Returns Task<ActionResult<Guid>> ValidateToken(EmailConfirmTokenForUserDto) Validates the token that the user has received in their email [HttpPost(\"api/v1/auth/validateToken\")] public Task<ActionResult> ValidateToken(EmailConfirmTokenForUserDto confirmTokenForUserDto) Parameters confirmTokenForUserDto EmailConfirmTokenForUserDto Email and the given token for email confirmation Returns Task<ActionResult>"
  },
  "api/MaintenanceChronicle.Api.Controllers.CustomerController.html": {
    "href": "api/MaintenanceChronicle.Api.Controllers.CustomerController.html",
    "title": "Class CustomerController | MaintenanceChronicleApiDocumantation",
    "keywords": "Class CustomerController Namespace MaintenanceChronicle.Api.Controllers Assembly MaintenanceChronicle.Api.dll [Authorize(Roles = \"Admin,GlobalAdmin\")] [ApiController] public class CustomerController : ControllerBase Inheritance object ControllerBase CustomerController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CustomerController(IMediator) public CustomerController(IMediator mediator) Parameters mediator IMediator Methods CreateCustomer(NewCustomerDto) Creates customer with the given information [HttpPost(\"api/v1/customers\")] public Task<ActionResult<Guid>> CreateCustomer(NewCustomerDto newCustomerDto) Parameters newCustomerDto NewCustomerDto Information that admin provides Returns Task<ActionResult<Guid>> New customer id DeleteCustomer(Guid) Deletes a specific customer by id [HttpDelete(\"api/v1/customers/{id:guid}\")] public Task<ActionResult> DeleteCustomer(Guid id) Parameters id Guid Returns Task<ActionResult> customer GetCustomer(Guid) Gets a specific customer by id [HttpGet(\"api/v1/customers/{id:guid}\")] public Task<ActionResult> GetCustomer(Guid id) Parameters id Guid Returns Task<ActionResult> customer GetCustomerList() Updates customer with the given information [HttpGet(\"api/v1/customers\")] public Task<ActionResult<List<ManageCustomerDetailDto>>> GetCustomerList() Returns Task<ActionResult<List<ManageCustomerDetailDto>>> GetLocationsForCustomer(Guid) Gets list of locations for the specified customer [HttpGet(\"api/v1/customers/{id:guid}/locations\")] public Task<ActionResult> GetLocationsForCustomer(Guid id) Parameters id Guid [Guid] customer id Returns Task<ActionResult> List of locations UpdateCustomer(Guid, JsonPatchDocument<ManageCustomerDetailDto>) Updates customer with the given information [HttpPatch(\"api/v1/customers/{id:guid}\")] public Task<ActionResult<ManageCustomerDetailDto>> UpdateCustomer(Guid id, JsonPatchDocument<ManageCustomerDetailDto> patch) Parameters id Guid patch JsonPatchDocument<ManageCustomerDetailDto> Information that admin provides Returns Task<ActionResult<ManageCustomerDetailDto>>"
  },
  "api/MaintenanceChronicle.Api.Controllers.LocationController.html": {
    "href": "api/MaintenanceChronicle.Api.Controllers.LocationController.html",
    "title": "Class LocationController | MaintenanceChronicleApiDocumantation",
    "keywords": "Class LocationController Namespace MaintenanceChronicle.Api.Controllers Assembly MaintenanceChronicle.Api.dll [Authorize(Roles = \"Admin,GlobalAdmin\")] [ApiController] public class LocationController : ControllerBase Inheritance object ControllerBase LocationController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LocationController(IMediator) public LocationController(IMediator mediator) Parameters mediator IMediator Methods CreateLocation(NewLocationDto) Creates customer with the given information [HttpPost(\"api/v1/locations\")] public Task<ActionResult<Guid>> CreateLocation(NewLocationDto newLocationDto) Parameters newLocationDto NewLocationDto Information that admin provides Returns Task<ActionResult<Guid>> New customer id DeleteLocation(Guid) Delete the specified location [HttpDelete(\"/api/v1/location/{id:guid}\")] public Task<ActionResult> DeleteLocation(Guid id) Parameters id Guid Returns Task<ActionResult> GetContactsForLocation(Guid) Gets contacts for specified location [HttpGet(\"/api/v1/location/{id:guid}/contacts\")] public Task<ActionResult<List<LocationContactInListDto>>> GetContactsForLocation(Guid id) Parameters id Guid Returns Task<ActionResult<List<LocationContactInListDto>>> GetLocation(Guid) Get location by id [HttpGet(\"/api/v1/location/{id:guid}\")] public Task<ActionResult<List<LocationDetailDto>>> GetLocation(Guid id) Parameters id Guid Id that user provides Returns Task<ActionResult<List<LocationDetailDto>>> GetLocationList() Gets the list of locations [HttpGet(\"/api/v1/locations\")] public Task<ActionResult<List<LocationInListDto>>> GetLocationList() Returns Task<ActionResult<List<LocationInListDto>>> GetMachinesForLocation(Guid) Gets list of machines for the specified location [HttpGet(\"/api/v1/location/{id:guid}/machines\")] public Task<ActionResult<List<MachineInListForLocationDto>>> GetMachinesForLocation(Guid id) Parameters id Guid User specified location id Returns Task<ActionResult<List<MachineInListForLocationDto>>> List of machines ManageContactsToLocation(Guid, ContactsInLocationDto) Adds contact to Location [HttpPost(\"/api/v1/location/{id:guid}/contacts\")] public Task<ActionResult> ManageContactsToLocation(Guid id, ContactsInLocationDto contactsInLocationDto) Parameters id Guid contactsInLocationDto ContactsInLocationDto Returns Task<ActionResult> UpdateLocation(Guid, JsonPatchDocument<ManageLocationDetailDto>) Updates customer with the given information [HttpPatch(\"api/v1/locations/{id:guid}\")] public Task<ActionResult<ManageLocationDetailDto>> UpdateLocation(Guid id, JsonPatchDocument<ManageLocationDetailDto> patch) Parameters id Guid patch JsonPatchDocument<ManageLocationDetailDto> Information that admin provides Returns Task<ActionResult<ManageLocationDetailDto>>"
  },
  "api/MaintenanceChronicle.Api.Controllers.MachineController.html": {
    "href": "api/MaintenanceChronicle.Api.Controllers.MachineController.html",
    "title": "Class MachineController | MaintenanceChronicleApiDocumantation",
    "keywords": "Class MachineController Namespace MaintenanceChronicle.Api.Controllers Assembly MaintenanceChronicle.Api.dll [Authorize(Roles = \"Admin,GlobalAdmin\")] [ApiController] public class MachineController : ControllerBase Inheritance object ControllerBase MachineController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MachineController(IMediator) public MachineController(IMediator mediator) Parameters mediator IMediator Methods CreateMachine(NewMachineDto) Creates new machine [HttpPost(\"/api/v1/machines\")] public Task<ActionResult<Guid>> CreateMachine(NewMachineDto newMachineDetail) Parameters newMachineDetail NewMachineDto Information from user Returns Task<ActionResult<Guid>> New machine id DeleteMachine(Guid) Soft deletes machine by specified id [HttpDelete(\"/api/v1/machines/{id:guid}\")] public Task<ActionResult> DeleteMachine(Guid id) Parameters id Guid User specified machine id Returns Task<ActionResult> GetMachineById(Guid) Gets machine by specified id [HttpGet(\"/api/v1/machines/{id:guid}\")] public Task<ActionResult<MachineDetailDto>> GetMachineById(Guid id) Parameters id Guid Machine id specified by user Returns Task<ActionResult<MachineDetailDto>> Patch GetMachineList() Gets list of machines [HttpGet(\"/api/v1/machines\")] public Task<ActionResult<List<MachineInListDto>>> GetMachineList() Returns Task<ActionResult<List<MachineInListDto>>> UpdateMachine(Guid, JsonPatchDocument<ManageMachineDetailDto>) Updates machine info [HttpPatch(\"/api/v1/machines/{id:guid}\")] public Task<ActionResult<ManageMachineDetailDto>> UpdateMachine(Guid id, JsonPatchDocument<ManageMachineDetailDto> patch) Parameters id Guid Updated machine id patch JsonPatchDocument<ManageMachineDetailDto> Object that says what props should be changed and how Returns Task<ActionResult<ManageMachineDetailDto>> Updated MachineDetail"
  },
  "api/MaintenanceChronicle.Api.Controllers.TenantController.html": {
    "href": "api/MaintenanceChronicle.Api.Controllers.TenantController.html",
    "title": "Class TenantController | MaintenanceChronicleApiDocumantation",
    "keywords": "Class TenantController Namespace MaintenanceChronicle.Api.Controllers Assembly MaintenanceChronicle.Api.dll [ApiController] public class TenantController : ControllerBase Inheritance object ControllerBase TenantController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TenantController(IMediator) public TenantController(IMediator mediator) Parameters mediator IMediator Methods AssignCreationInfoToTenant(TenantsCreatorUserIdDto) Assigns userId and ITrackable info to tenant [HttpPost(\"api/v1/tenants/creation-info\")] public Task<ActionResult> AssignCreationInfoToTenant(TenantsCreatorUserIdDto tenantsCreatorUserId) Parameters tenantsCreatorUserId TenantsCreatorUserIdDto Information that user provides Returns Task<ActionResult> CreateTenant(NewTenantDto) Creates a tenant with the given information [HttpPost(\"api/v1/tenants\")] public Task<ActionResult<Guid>> CreateTenant(NewTenantDto newTenantDto) Parameters newTenantDto NewTenantDto Information that user provides Returns Task<ActionResult<Guid>> GetTenant(Guid) Gets the tenant with the given id [HttpGet(\"api/v1/tenants/{id}\")] public Task<ActionResult<TenantDetailDto>> GetTenant(Guid id) Parameters id Guid Id of tenant Returns Task<ActionResult<TenantDetailDto>> GetTenantList() Gets the list of tenants [HttpGet(\"api/v1/tenants\")] public Task<ActionResult<List<TenantListDto>>> GetTenantList() Returns Task<ActionResult<List<TenantListDto>>> UpdateTenant(TenantDetailDto) Updates a tenant with the given information [HttpPatch(\"api/v1/tenants\")] public Task<ActionResult<Guid>> UpdateTenant(TenantDetailDto tenantDetailDto) Parameters tenantDetailDto TenantDetailDto Information that user provides Returns Task<ActionResult<Guid>>"
  },
  "api/MaintenanceChronicle.Api.Controllers.UserController.html": {
    "href": "api/MaintenanceChronicle.Api.Controllers.UserController.html",
    "title": "Class UserController | MaintenanceChronicleApiDocumantation",
    "keywords": "Class UserController Namespace MaintenanceChronicle.Api.Controllers Assembly MaintenanceChronicle.Api.dll [Authorize(Roles = \"Admin,GlobalAdmin\")] [ApiController] public class UserController : ControllerBase Inheritance object ControllerBase UserController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UserController(IMediator) public UserController(IMediator mediator) Parameters mediator IMediator Methods CreateUser(CreateNewUserDto) Creates a user with the given information [HttpPost(\"api/v1/users\")] public Task<ActionResult<Guid>> CreateUser(CreateNewUserDto createNewUserDto) Parameters createNewUserDto CreateNewUserDto Information that admin provides Returns Task<ActionResult<Guid>> New user id GetUser(Guid) Gets a specific user by id [HttpGet(\"api/v1/users/{id:guid}\")] public Task<ActionResult> GetUser(Guid id) Parameters id Guid Returns Task<ActionResult> user GetUserList() Gets a list of users [HttpGet(\"api/v1/users\")] public Task<ActionResult> GetUserList() Returns Task<ActionResult> List of users UpdateUser(UpdateUserDetailDto) Updates a user with the given information [HttpPatch(\"api/v1/users\")] public Task<ActionResult> UpdateUser(UpdateUserDetailDto userDetailDto) Parameters userDetailDto UpdateUserDetailDto Information that admin provides Returns Task<ActionResult>"
  },
  "api/MaintenanceChronicle.Api.Controllers.html": {
    "href": "api/MaintenanceChronicle.Api.Controllers.html",
    "title": "Namespace MaintenanceChronicle.Api.Controllers | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Api.Controllers Classes AuthController CustomerController LocationController MachineController TenantController UserController"
  },
  "api/MaintenanceChronicle.Api.Utils.CurrentTenantProvider.html": {
    "href": "api/MaintenanceChronicle.Api.Utils.CurrentTenantProvider.html",
    "title": "Class CurrentTenantProvider | MaintenanceChronicleApiDocumantation",
    "keywords": "Class CurrentTenantProvider Namespace MaintenanceChronicle.Api.Utils Assembly MaintenanceChronicle.Api.dll public class CurrentTenantProvider : ICurrentTenantProvider Inheritance object CurrentTenantProvider Implements ICurrentTenantProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CurrentTenantProvider(IHttpContextAccessor) public CurrentTenantProvider(IHttpContextAccessor httpContextAccessor) Parameters httpContextAccessor IHttpContextAccessor Properties TenantId public Guid TenantId { get; } Property Value Guid"
  },
  "api/MaintenanceChronicle.Api.Utils.html": {
    "href": "api/MaintenanceChronicle.Api.Utils.html",
    "title": "Namespace MaintenanceChronicle.Api.Utils | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Api.Utils Classes CurrentTenantProvider"
  },
  "api/MaintenanceChronicle.Application.Contracts.Customers.Commands.CreateNewCustomerCommand.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Customers.Commands.CreateNewCustomerCommand.html",
    "title": "Class CreateNewCustomerCommand | MaintenanceChronicleApiDocumantation",
    "keywords": "Class CreateNewCustomerCommand Namespace MaintenanceChronicle.Application.Contracts.Customers.Commands Assembly MaintenanceChronicle.Application.Contracts.dll public record CreateNewCustomerCommand : IRequest<Guid>, IBaseRequest, IEquatable<CreateNewCustomerCommand> Inheritance object CreateNewCustomerCommand Implements IRequest<Guid> IBaseRequest IEquatable<CreateNewCustomerCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateNewCustomerCommand(NewCustomerDto, string, string) public CreateNewCustomerCommand(NewCustomerDto NewCustomer, string UserId, string TenantId) Parameters NewCustomer NewCustomerDto UserId string TenantId string Properties NewCustomer public NewCustomerDto NewCustomer { get; init; } Property Value NewCustomerDto TenantId public string TenantId { get; init; } Property Value string UserId public string UserId { get; init; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Customers.Commands.Dto.ManageCustomerDetailDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Customers.Commands.Dto.ManageCustomerDetailDto.html",
    "title": "Class ManageCustomerDetailDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class ManageCustomerDetailDto Namespace MaintenanceChronicle.Application.Contracts.Customers.Commands.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class ManageCustomerDetailDto Inheritance object ManageCustomerDetailDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ManageCustomerDetailDtoExtensions.ToCustomerEntity(ManageCustomerDetailDto) Properties Id public Guid Id { get; set; } Property Value Guid Name public required string Name { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Customers.Commands.Dto.ManageCustomerDetailDtoExtensions.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Customers.Commands.Dto.ManageCustomerDetailDtoExtensions.html",
    "title": "Class ManageCustomerDetailDtoExtensions | MaintenanceChronicleApiDocumantation",
    "keywords": "Class ManageCustomerDetailDtoExtensions Namespace MaintenanceChronicle.Application.Contracts.Customers.Commands.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public static class ManageCustomerDetailDtoExtensions Inheritance object ManageCustomerDetailDtoExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToCustomerEntity(ManageCustomerDetailDto) public static Customer ToCustomerEntity(this ManageCustomerDetailDto manageCustomerDto) Parameters manageCustomerDto ManageCustomerDetailDto Returns Customer ToManageCustomerDetailDto(Customer) public static ManageCustomerDetailDto ToManageCustomerDetailDto(this Customer customer) Parameters customer Customer Returns ManageCustomerDetailDto"
  },
  "api/MaintenanceChronicle.Application.Contracts.Customers.Commands.Dto.NewCustomerDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Customers.Commands.Dto.NewCustomerDto.html",
    "title": "Class NewCustomerDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class NewCustomerDto Namespace MaintenanceChronicle.Application.Contracts.Customers.Commands.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class NewCustomerDto Inheritance object NewCustomerDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name public required string Name { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Customers.Commands.Dto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Customers.Commands.Dto.html",
    "title": "Namespace MaintenanceChronicle.Application.Contracts.Customers.Commands.Dto | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Contracts.Customers.Commands.Dto Classes ManageCustomerDetailDto ManageCustomerDetailDtoExtensions NewCustomerDto"
  },
  "api/MaintenanceChronicle.Application.Contracts.Customers.Commands.UpdateCustomerCommand.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Customers.Commands.UpdateCustomerCommand.html",
    "title": "Class UpdateCustomerCommand | MaintenanceChronicleApiDocumantation",
    "keywords": "Class UpdateCustomerCommand Namespace MaintenanceChronicle.Application.Contracts.Customers.Commands Assembly MaintenanceChronicle.Application.Contracts.dll public record UpdateCustomerCommand : IRequest<ManageCustomerDetailDto>, IBaseRequest, IEquatable<UpdateCustomerCommand> Inheritance object UpdateCustomerCommand Implements IRequest<ManageCustomerDetailDto> IBaseRequest IEquatable<UpdateCustomerCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateCustomerCommand(JsonPatchDocument<ManageCustomerDetailDto>, Guid, string) public UpdateCustomerCommand(JsonPatchDocument<ManageCustomerDetailDto> Patch, Guid CustomerId, string UserId) Parameters Patch JsonPatchDocument<ManageCustomerDetailDto> CustomerId Guid UserId string Properties CustomerId public Guid CustomerId { get; init; } Property Value Guid Patch public JsonPatchDocument<ManageCustomerDetailDto> Patch { get; init; } Property Value JsonPatchDocument<ManageCustomerDetailDto> UserId public string UserId { get; init; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Customers.Commands.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Customers.Commands.html",
    "title": "Namespace MaintenanceChronicle.Application.Contracts.Customers.Commands | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Contracts.Customers.Commands Classes CreateNewCustomerCommand UpdateCustomerCommand"
  },
  "api/MaintenanceChronicle.Application.Contracts.Customers.Queries.Dto.CustomerDetailDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Customers.Queries.Dto.CustomerDetailDto.html",
    "title": "Class CustomerDetailDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class CustomerDetailDto Namespace MaintenanceChronicle.Application.Contracts.Customers.Queries.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class CustomerDetailDto Inheritance object CustomerDetailDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods CustomerDetailDtoExtensions.ToCustomerEntity(CustomerDetailDto) Properties Id public Guid Id { get; set; } Property Value Guid Name public required string Name { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Customers.Queries.Dto.CustomerDetailDtoExtensions.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Customers.Queries.Dto.CustomerDetailDtoExtensions.html",
    "title": "Class CustomerDetailDtoExtensions | MaintenanceChronicleApiDocumantation",
    "keywords": "Class CustomerDetailDtoExtensions Namespace MaintenanceChronicle.Application.Contracts.Customers.Queries.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public static class CustomerDetailDtoExtensions Inheritance object CustomerDetailDtoExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToCustomerDetailDto(Customer) public static CustomerDetailDto ToCustomerDetailDto(this Customer customer) Parameters customer Customer Returns CustomerDetailDto ToCustomerEntity(CustomerDetailDto) public static Customer ToCustomerEntity(this CustomerDetailDto manageCustomerDto) Parameters manageCustomerDto CustomerDetailDto Returns Customer"
  },
  "api/MaintenanceChronicle.Application.Contracts.Customers.Queries.Dto.CustomerInListDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Customers.Queries.Dto.CustomerInListDto.html",
    "title": "Class CustomerInListDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class CustomerInListDto Namespace MaintenanceChronicle.Application.Contracts.Customers.Queries.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class CustomerInListDto Inheritance object CustomerInListDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id public Guid Id { get; set; } Property Value Guid Name public required string Name { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Customers.Queries.Dto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Customers.Queries.Dto.html",
    "title": "Namespace MaintenanceChronicle.Application.Contracts.Customers.Queries.Dto | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Contracts.Customers.Queries.Dto Classes CustomerDetailDto CustomerDetailDtoExtensions CustomerInListDto"
  },
  "api/MaintenanceChronicle.Application.Contracts.LocationContactUsers.Queries.Dto.LocationContactInListDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.LocationContactUsers.Queries.Dto.LocationContactInListDto.html",
    "title": "Class LocationContactInListDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class LocationContactInListDto Namespace MaintenanceChronicle.Application.Contracts.LocationContactUsers.Queries.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class LocationContactInListDto Inheritance object LocationContactInListDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email public required string Email { get; set; } Property Value string FullName public required string FullName { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid PhoneNumber public string? PhoneNumber { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.LocationContactUsers.Queries.Dto.LocationContactInListDtoExtension.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.LocationContactUsers.Queries.Dto.LocationContactInListDtoExtension.html",
    "title": "Class LocationContactInListDtoExtension | MaintenanceChronicleApiDocumantation",
    "keywords": "Class LocationContactInListDtoExtension Namespace MaintenanceChronicle.Application.Contracts.LocationContactUsers.Queries.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public static class LocationContactInListDtoExtension Inheritance object LocationContactInListDtoExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToLocationContactInListDto(LocationContactUser) public static LocationContactInListDto ToLocationContactInListDto(this LocationContactUser user) Parameters user LocationContactUser Returns LocationContactInListDto"
  },
  "api/MaintenanceChronicle.Application.Contracts.LocationContactUsers.Queries.Dto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.LocationContactUsers.Queries.Dto.html",
    "title": "Namespace MaintenanceChronicle.Application.Contracts.LocationContactUsers.Queries.Dto | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Contracts.LocationContactUsers.Queries.Dto Classes LocationContactInListDto LocationContactInListDtoExtension"
  },
  "api/MaintenanceChronicle.Application.Contracts.LocationContactUsers.Queries.GetListOfContactsForLocationQuery.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.LocationContactUsers.Queries.GetListOfContactsForLocationQuery.html",
    "title": "Class GetListOfContactsForLocationQuery | MaintenanceChronicleApiDocumantation",
    "keywords": "Class GetListOfContactsForLocationQuery Namespace MaintenanceChronicle.Application.Contracts.LocationContactUsers.Queries Assembly MaintenanceChronicle.Application.Contracts.dll public record GetListOfContactsForLocationQuery : IRequest<List<LocationContactInListDto>>, IBaseRequest, IEquatable<GetListOfContactsForLocationQuery> Inheritance object GetListOfContactsForLocationQuery Implements IRequest<List<LocationContactInListDto>> IBaseRequest IEquatable<GetListOfContactsForLocationQuery> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetListOfContactsForLocationQuery(Guid) public GetListOfContactsForLocationQuery(Guid LocationId) Parameters LocationId Guid Properties LocationId public Guid LocationId { get; init; } Property Value Guid"
  },
  "api/MaintenanceChronicle.Application.Contracts.LocationContactUsers.Queries.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.LocationContactUsers.Queries.html",
    "title": "Namespace MaintenanceChronicle.Application.Contracts.LocationContactUsers.Queries | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Contracts.LocationContactUsers.Queries Classes GetListOfContactsForLocationQuery"
  },
  "api/MaintenanceChronicle.Application.Contracts.Locations.Commands.CreateNewLocationCommand.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Locations.Commands.CreateNewLocationCommand.html",
    "title": "Class CreateNewLocationCommand | MaintenanceChronicleApiDocumantation",
    "keywords": "Class CreateNewLocationCommand Namespace MaintenanceChronicle.Application.Contracts.Locations.Commands Assembly MaintenanceChronicle.Application.Contracts.dll public record CreateNewLocationCommand : IRequest<Guid>, IBaseRequest, IEquatable<CreateNewLocationCommand> Inheritance object CreateNewLocationCommand Implements IRequest<Guid> IBaseRequest IEquatable<CreateNewLocationCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateNewLocationCommand(NewLocationDto, string, string) public CreateNewLocationCommand(NewLocationDto LocationDto, string UserId, string TenantId) Parameters LocationDto NewLocationDto UserId string TenantId string Properties LocationDto public NewLocationDto LocationDto { get; init; } Property Value NewLocationDto TenantId public string TenantId { get; init; } Property Value string UserId public string UserId { get; init; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ContactsInLocationDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ContactsInLocationDto.html",
    "title": "Class ContactsInLocationDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class ContactsInLocationDto Namespace MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class ContactsInLocationDto Inheritance object ContactsInLocationDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ContactIds public required Guid[] ContactIds { get; set; } Property Value Guid[] LocationId public Guid LocationId { get; set; } Property Value Guid"
  },
  "api/MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto.html",
    "title": "Class ManageLocationDetailDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class ManageLocationDetailDto Namespace MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class ManageLocationDetailDto Inheritance object ManageLocationDetailDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ManageLocationDetailDtoExtension.MapToEntity(ManageLocationDetailDto, Location) Properties City public required string City { get; set; } Property Value string Country public required string Country { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid Name public required string Name { get; set; } Property Value string Street public required string Street { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDtoExtension.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDtoExtension.html",
    "title": "Class ManageLocationDetailDtoExtension | MaintenanceChronicleApiDocumantation",
    "keywords": "Class ManageLocationDetailDtoExtension Namespace MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public static class ManageLocationDetailDtoExtension Inheritance object ManageLocationDetailDtoExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods MapToEntity(ManageLocationDetailDto, Location) public static void MapToEntity(this ManageLocationDetailDto manageLocationDetailDto, Location target) Parameters manageLocationDetailDto ManageLocationDetailDto target Location ToManageDto(Location) public static ManageLocationDetailDto ToManageDto(this Location location) Parameters location Location Returns ManageLocationDetailDto"
  },
  "api/MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.NewLocationDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.NewLocationDto.html",
    "title": "Class NewLocationDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class NewLocationDto Namespace MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class NewLocationDto Inheritance object NewLocationDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NewLocationDtoExtension.ToEntity(NewLocationDto) Properties City public required string City { get; set; } Property Value string Country public required string Country { get; set; } Property Value string CustomerId public Guid CustomerId { get; set; } Property Value Guid Name public required string Name { get; set; } Property Value string Street public required string Street { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.NewLocationDtoExtension.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.NewLocationDtoExtension.html",
    "title": "Class NewLocationDtoExtension | MaintenanceChronicleApiDocumantation",
    "keywords": "Class NewLocationDtoExtension Namespace MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public static class NewLocationDtoExtension Inheritance object NewLocationDtoExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToEntity(NewLocationDto) public static Location ToEntity(this NewLocationDto newLocationDto) Parameters newLocationDto NewLocationDto Returns Location"
  },
  "api/MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.html",
    "title": "Namespace MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto Classes ContactsInLocationDto ManageLocationDetailDto ManageLocationDetailDtoExtension NewLocationDto NewLocationDtoExtension"
  },
  "api/MaintenanceChronicle.Application.Contracts.Locations.Commands.ManageContactsInLocationCommand.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Locations.Commands.ManageContactsInLocationCommand.html",
    "title": "Class ManageContactsInLocationCommand | MaintenanceChronicleApiDocumantation",
    "keywords": "Class ManageContactsInLocationCommand Namespace MaintenanceChronicle.Application.Contracts.Locations.Commands Assembly MaintenanceChronicle.Application.Contracts.dll public record ManageContactsInLocationCommand : IRequest, IBaseRequest, IEquatable<ManageContactsInLocationCommand> Inheritance object ManageContactsInLocationCommand Implements IRequest IBaseRequest IEquatable<ManageContactsInLocationCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ManageContactsInLocationCommand(Guid, ContactsInLocationDto, string, string) public ManageContactsInLocationCommand(Guid LocationId, ContactsInLocationDto ContactsInLocationDto, string UserId, string TenantId) Parameters LocationId Guid ContactsInLocationDto ContactsInLocationDto UserId string TenantId string Properties ContactsInLocationDto public ContactsInLocationDto ContactsInLocationDto { get; init; } Property Value ContactsInLocationDto LocationId public Guid LocationId { get; init; } Property Value Guid TenantId public string TenantId { get; init; } Property Value string UserId public string UserId { get; init; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand.html",
    "title": "Class UpdateLocationCommand | MaintenanceChronicleApiDocumantation",
    "keywords": "Class UpdateLocationCommand Namespace MaintenanceChronicle.Application.Contracts.Locations.Commands Assembly MaintenanceChronicle.Application.Contracts.dll public record UpdateLocationCommand : IRequest<ManageLocationDetailDto>, IBaseRequest, IEquatable<UpdateLocationCommand> Inheritance object UpdateLocationCommand Implements IRequest<ManageLocationDetailDto> IBaseRequest IEquatable<UpdateLocationCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateLocationCommand(JsonPatchDocument<ManageLocationDetailDto>, Guid, string) public UpdateLocationCommand(JsonPatchDocument<ManageLocationDetailDto> Patch, Guid LocationId, string UserId) Parameters Patch JsonPatchDocument<ManageLocationDetailDto> LocationId Guid UserId string Properties LocationId public Guid LocationId { get; init; } Property Value Guid Patch public JsonPatchDocument<ManageLocationDetailDto> Patch { get; init; } Property Value JsonPatchDocument<ManageLocationDetailDto> UserId public string UserId { get; init; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Locations.Commands.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Locations.Commands.html",
    "title": "Namespace MaintenanceChronicle.Application.Contracts.Locations.Commands | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Contracts.Locations.Commands Classes CreateNewLocationCommand ManageContactsInLocationCommand UpdateLocationCommand"
  },
  "api/MaintenanceChronicle.Application.Contracts.Locations.Queries.Dto.LocationDetailDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Locations.Queries.Dto.LocationDetailDto.html",
    "title": "Class LocationDetailDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class LocationDetailDto Namespace MaintenanceChronicle.Application.Contracts.Locations.Queries.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class LocationDetailDto Inheritance object LocationDetailDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties City public required string City { get; set; } Property Value string Country public required string Country { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid Name public required string Name { get; set; } Property Value string Street public required string Street { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Locations.Queries.Dto.LocationDetailDtoExtensions.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Locations.Queries.Dto.LocationDetailDtoExtensions.html",
    "title": "Class LocationDetailDtoExtensions | MaintenanceChronicleApiDocumantation",
    "keywords": "Class LocationDetailDtoExtensions Namespace MaintenanceChronicle.Application.Contracts.Locations.Queries.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public static class LocationDetailDtoExtensions Inheritance object LocationDetailDtoExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToLocationDetailDto(Location) public static LocationDetailDto ToLocationDetailDto(this Location location) Parameters location Location Returns LocationDetailDto"
  },
  "api/MaintenanceChronicle.Application.Contracts.Locations.Queries.Dto.LocationInListDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Locations.Queries.Dto.LocationInListDto.html",
    "title": "Class LocationInListDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class LocationInListDto Namespace MaintenanceChronicle.Application.Contracts.Locations.Queries.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class LocationInListDto Inheritance object LocationInListDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties City public required string City { get; set; } Property Value string Country public required string Country { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid Name public required string Name { get; set; } Property Value string Street public required string Street { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Locations.Queries.Dto.LocationInListExtensions.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Locations.Queries.Dto.LocationInListExtensions.html",
    "title": "Class LocationInListExtensions | MaintenanceChronicleApiDocumantation",
    "keywords": "Class LocationInListExtensions Namespace MaintenanceChronicle.Application.Contracts.Locations.Queries.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public static class LocationInListExtensions Inheritance object LocationInListExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToLocationInListDto(Location) public static LocationInListDto ToLocationInListDto(this Location location) Parameters location Location Returns LocationInListDto"
  },
  "api/MaintenanceChronicle.Application.Contracts.Locations.Queries.Dto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Locations.Queries.Dto.html",
    "title": "Namespace MaintenanceChronicle.Application.Contracts.Locations.Queries.Dto | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Contracts.Locations.Queries.Dto Classes LocationDetailDto LocationDetailDtoExtensions LocationInListDto LocationInListExtensions"
  },
  "api/MaintenanceChronicle.Application.Contracts.Locations.Queries.GetLocationsForCustomerQuery.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Locations.Queries.GetLocationsForCustomerQuery.html",
    "title": "Class GetLocationsForCustomerQuery | MaintenanceChronicleApiDocumantation",
    "keywords": "Class GetLocationsForCustomerQuery Namespace MaintenanceChronicle.Application.Contracts.Locations.Queries Assembly MaintenanceChronicle.Application.Contracts.dll public record GetLocationsForCustomerQuery : IRequest<List<LocationInListDto>>, IBaseRequest, IEquatable<GetLocationsForCustomerQuery> Inheritance object GetLocationsForCustomerQuery Implements IRequest<List<LocationInListDto>> IBaseRequest IEquatable<GetLocationsForCustomerQuery> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetLocationsForCustomerQuery(Guid) public GetLocationsForCustomerQuery(Guid CustomerId) Parameters CustomerId Guid Properties CustomerId public Guid CustomerId { get; init; } Property Value Guid"
  },
  "api/MaintenanceChronicle.Application.Contracts.Locations.Queries.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Locations.Queries.html",
    "title": "Namespace MaintenanceChronicle.Application.Contracts.Locations.Queries | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Contracts.Locations.Queries Classes GetLocationsForCustomerQuery"
  },
  "api/MaintenanceChronicle.Application.Contracts.Machines.Commands.CreateNewMachineCommand.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Machines.Commands.CreateNewMachineCommand.html",
    "title": "Class CreateNewMachineCommand | MaintenanceChronicleApiDocumantation",
    "keywords": "Class CreateNewMachineCommand Namespace MaintenanceChronicle.Application.Contracts.Machines.Commands Assembly MaintenanceChronicle.Application.Contracts.dll public record CreateNewMachineCommand : IRequest<Guid>, IBaseRequest, IEquatable<CreateNewMachineCommand> Inheritance object CreateNewMachineCommand Implements IRequest<Guid> IBaseRequest IEquatable<CreateNewMachineCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateNewMachineCommand(NewMachineDto, string, string) public CreateNewMachineCommand(NewMachineDto NewMachineDto, string UserId, string TenantId) Parameters NewMachineDto NewMachineDto UserId string TenantId string Properties NewMachineDto public NewMachineDto NewMachineDto { get; init; } Property Value NewMachineDto TenantId public string TenantId { get; init; } Property Value string UserId public string UserId { get; init; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Machines.Commands.Dto.ManageMachineDetailDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Machines.Commands.Dto.ManageMachineDetailDto.html",
    "title": "Class ManageMachineDetailDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class ManageMachineDetailDto Namespace MaintenanceChronicle.Application.Contracts.Machines.Commands.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class ManageMachineDetailDto Inheritance object ManageMachineDetailDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ManageMachineDetailExtension.MapToEntity(ManageMachineDetailDto, Machine) Properties Color public required string Color { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid InUseSince public required Instant InUseSince { get; set; } Property Value Instant LocationId public required Guid LocationId { get; set; } Property Value Guid Manufacture public required string Manufacture { get; set; } Property Value string Model public required string Model { get; set; } Property Value string SerialNumber public required string SerialNumber { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Machines.Commands.Dto.ManageMachineDetailExtension.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Machines.Commands.Dto.ManageMachineDetailExtension.html",
    "title": "Class ManageMachineDetailExtension | MaintenanceChronicleApiDocumantation",
    "keywords": "Class ManageMachineDetailExtension Namespace MaintenanceChronicle.Application.Contracts.Machines.Commands.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public static class ManageMachineDetailExtension Inheritance object ManageMachineDetailExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods MapToEntity(ManageMachineDetailDto, Machine) public static void MapToEntity(this ManageMachineDetailDto dto, Machine target) Parameters dto ManageMachineDetailDto target Machine ToManageMachineDetailDto(Machine) public static ManageMachineDetailDto ToManageMachineDetailDto(this Machine entity) Parameters entity Machine Returns ManageMachineDetailDto"
  },
  "api/MaintenanceChronicle.Application.Contracts.Machines.Commands.Dto.NewMachineDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Machines.Commands.Dto.NewMachineDto.html",
    "title": "Class NewMachineDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class NewMachineDto Namespace MaintenanceChronicle.Application.Contracts.Machines.Commands.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class NewMachineDto Inheritance object NewMachineDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NewMachineDtoExtension.ToMachineEntity(NewMachineDto) Properties Color public required string Color { get; set; } Property Value string InUseSince public required string InUseSince { get; set; } Property Value string LocationId public required Guid LocationId { get; set; } Property Value Guid Manufacture public required string Manufacture { get; set; } Property Value string Model public required string Model { get; set; } Property Value string SerialNumber public required string SerialNumber { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Machines.Commands.Dto.NewMachineDtoExtension.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Machines.Commands.Dto.NewMachineDtoExtension.html",
    "title": "Class NewMachineDtoExtension | MaintenanceChronicleApiDocumantation",
    "keywords": "Class NewMachineDtoExtension Namespace MaintenanceChronicle.Application.Contracts.Machines.Commands.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public static class NewMachineDtoExtension Inheritance object NewMachineDtoExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToMachineEntity(NewMachineDto) public static Machine ToMachineEntity(this NewMachineDto newMachineDto) Parameters newMachineDto NewMachineDto Returns Machine"
  },
  "api/MaintenanceChronicle.Application.Contracts.Machines.Commands.Dto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Machines.Commands.Dto.html",
    "title": "Namespace MaintenanceChronicle.Application.Contracts.Machines.Commands.Dto | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Contracts.Machines.Commands.Dto Classes ManageMachineDetailDto ManageMachineDetailExtension NewMachineDto NewMachineDtoExtension"
  },
  "api/MaintenanceChronicle.Application.Contracts.Machines.Commands.UpdateMachineCommand.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Machines.Commands.UpdateMachineCommand.html",
    "title": "Class UpdateMachineCommand | MaintenanceChronicleApiDocumantation",
    "keywords": "Class UpdateMachineCommand Namespace MaintenanceChronicle.Application.Contracts.Machines.Commands Assembly MaintenanceChronicle.Application.Contracts.dll public record UpdateMachineCommand : IRequest<ManageMachineDetailDto>, IBaseRequest, IEquatable<UpdateMachineCommand> Inheritance object UpdateMachineCommand Implements IRequest<ManageMachineDetailDto> IBaseRequest IEquatable<UpdateMachineCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateMachineCommand(JsonPatchDocument<ManageMachineDetailDto>, Guid, string) public UpdateMachineCommand(JsonPatchDocument<ManageMachineDetailDto> Patch, Guid MachineId, string UserId) Parameters Patch JsonPatchDocument<ManageMachineDetailDto> MachineId Guid UserId string Properties MachineId public Guid MachineId { get; init; } Property Value Guid Patch public JsonPatchDocument<ManageMachineDetailDto> Patch { get; init; } Property Value JsonPatchDocument<ManageMachineDetailDto> UserId public string UserId { get; init; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Machines.Commands.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Machines.Commands.html",
    "title": "Namespace MaintenanceChronicle.Application.Contracts.Machines.Commands | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Contracts.Machines.Commands Classes CreateNewMachineCommand UpdateMachineCommand"
  },
  "api/MaintenanceChronicle.Application.Contracts.Machines.Queries.Dto.MachineDetailDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Machines.Queries.Dto.MachineDetailDto.html",
    "title": "Class MachineDetailDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class MachineDetailDto Namespace MaintenanceChronicle.Application.Contracts.Machines.Queries.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class MachineDetailDto Inheritance object MachineDetailDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Color public required string Color { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid InUseSince public Instant InUseSince { get; set; } Property Value Instant Manufacture public required string Manufacture { get; set; } Property Value string Model public required string Model { get; set; } Property Value string SerialNumber public required string SerialNumber { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Machines.Queries.Dto.MachineDetailDtoExtension.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Machines.Queries.Dto.MachineDetailDtoExtension.html",
    "title": "Class MachineDetailDtoExtension | MaintenanceChronicleApiDocumantation",
    "keywords": "Class MachineDetailDtoExtension Namespace MaintenanceChronicle.Application.Contracts.Machines.Queries.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public static class MachineDetailDtoExtension Inheritance object MachineDetailDtoExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToMachineDetailDto(Machine) public static MachineDetailDto ToMachineDetailDto(this Machine entity) Parameters entity Machine Returns MachineDetailDto"
  },
  "api/MaintenanceChronicle.Application.Contracts.Machines.Queries.Dto.MachineInListDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Machines.Queries.Dto.MachineInListDto.html",
    "title": "Class MachineInListDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class MachineInListDto Namespace MaintenanceChronicle.Application.Contracts.Machines.Queries.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class MachineInListDto Inheritance object MachineInListDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id public Guid Id { get; set; } Property Value Guid LocationName public required string LocationName { get; set; } Property Value string Model public required string Model { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Machines.Queries.Dto.MachineInListExtension.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Machines.Queries.Dto.MachineInListExtension.html",
    "title": "Class MachineInListExtension | MaintenanceChronicleApiDocumantation",
    "keywords": "Class MachineInListExtension Namespace MaintenanceChronicle.Application.Contracts.Machines.Queries.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public static class MachineInListExtension Inheritance object MachineInListExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToMachineInListDto(Machine) public static MachineInListDto ToMachineInListDto(this Machine entity) Parameters entity Machine Returns MachineInListDto"
  },
  "api/MaintenanceChronicle.Application.Contracts.Machines.Queries.Dto.MachineInListForLocationDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Machines.Queries.Dto.MachineInListForLocationDto.html",
    "title": "Class MachineInListForLocationDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class MachineInListForLocationDto Namespace MaintenanceChronicle.Application.Contracts.Machines.Queries.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class MachineInListForLocationDto Inheritance object MachineInListForLocationDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id public Guid Id { get; set; } Property Value Guid Model public required string Model { get; set; } Property Value string SerialNumber public required string SerialNumber { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Machines.Queries.Dto.MachineInListForLocationExtension.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Machines.Queries.Dto.MachineInListForLocationExtension.html",
    "title": "Class MachineInListForLocationExtension | MaintenanceChronicleApiDocumantation",
    "keywords": "Class MachineInListForLocationExtension Namespace MaintenanceChronicle.Application.Contracts.Machines.Queries.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public static class MachineInListForLocationExtension Inheritance object MachineInListForLocationExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToMachineInListForLocationDto(Machine) public static MachineInListForLocationDto ToMachineInListForLocationDto(this Machine entity) Parameters entity Machine Returns MachineInListForLocationDto"
  },
  "api/MaintenanceChronicle.Application.Contracts.Machines.Queries.Dto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Machines.Queries.Dto.html",
    "title": "Namespace MaintenanceChronicle.Application.Contracts.Machines.Queries.Dto | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Contracts.Machines.Queries.Dto Classes MachineDetailDto MachineDetailDtoExtension MachineInListDto MachineInListExtension MachineInListForLocationDto MachineInListForLocationExtension"
  },
  "api/MaintenanceChronicle.Application.Contracts.Machines.Queries.GetMachinesForLocationQuery.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Machines.Queries.GetMachinesForLocationQuery.html",
    "title": "Class GetMachinesForLocationQuery | MaintenanceChronicleApiDocumantation",
    "keywords": "Class GetMachinesForLocationQuery Namespace MaintenanceChronicle.Application.Contracts.Machines.Queries Assembly MaintenanceChronicle.Application.Contracts.dll public record GetMachinesForLocationQuery : IRequest<List<MachineInListForLocationDto>>, IBaseRequest, IEquatable<GetMachinesForLocationQuery> Inheritance object GetMachinesForLocationQuery Implements IRequest<List<MachineInListForLocationDto>> IBaseRequest IEquatable<GetMachinesForLocationQuery> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetMachinesForLocationQuery(Guid) public GetMachinesForLocationQuery(Guid LocationId) Parameters LocationId Guid Properties LocationId public Guid LocationId { get; init; } Property Value Guid"
  },
  "api/MaintenanceChronicle.Application.Contracts.Machines.Queries.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Machines.Queries.html",
    "title": "Namespace MaintenanceChronicle.Application.Contracts.Machines.Queries | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Contracts.Machines.Queries Classes GetMachinesForLocationQuery"
  },
  "api/MaintenanceChronicle.Application.Contracts.Roles.Dto.RoleDetailDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Roles.Dto.RoleDetailDto.html",
    "title": "Class RoleDetailDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class RoleDetailDto Namespace MaintenanceChronicle.Application.Contracts.Roles.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class RoleDetailDto Inheritance object RoleDetailDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id public Guid Id { get; set; } Property Value Guid Name public required string Name { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Roles.Dto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Roles.Dto.html",
    "title": "Namespace MaintenanceChronicle.Application.Contracts.Roles.Dto | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Contracts.Roles.Dto Classes RoleDetailDto"
  },
  "api/MaintenanceChronicle.Application.Contracts.Tenants.Commands.AddTenantClaimToUserPrincipalCommand.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Tenants.Commands.AddTenantClaimToUserPrincipalCommand.html",
    "title": "Class AddTenantClaimToUserPrincipalCommand | MaintenanceChronicleApiDocumantation",
    "keywords": "Class AddTenantClaimToUserPrincipalCommand Namespace MaintenanceChronicle.Application.Contracts.Tenants.Commands Assembly MaintenanceChronicle.Application.Contracts.dll public record AddTenantClaimToUserPrincipalCommand : IRequest<ClaimsPrincipal>, IBaseRequest, IEquatable<AddTenantClaimToUserPrincipalCommand> Inheritance object AddTenantClaimToUserPrincipalCommand Implements IRequest<ClaimsPrincipal> IBaseRequest IEquatable<AddTenantClaimToUserPrincipalCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AddTenantClaimToUserPrincipalCommand(UserTenantClaimDto, ClaimsPrincipal) public AddTenantClaimToUserPrincipalCommand(UserTenantClaimDto UserTenantClaim, ClaimsPrincipal ClaimsPrincipal) Parameters UserTenantClaim UserTenantClaimDto ClaimsPrincipal ClaimsPrincipal Properties ClaimsPrincipal public ClaimsPrincipal ClaimsPrincipal { get; init; } Property Value ClaimsPrincipal UserTenantClaim public UserTenantClaimDto UserTenantClaim { get; init; } Property Value UserTenantClaimDto"
  },
  "api/MaintenanceChronicle.Application.Contracts.Tenants.Commands.AssignCreationInfoToTenantCommand.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Tenants.Commands.AssignCreationInfoToTenantCommand.html",
    "title": "Class AssignCreationInfoToTenantCommand | MaintenanceChronicleApiDocumantation",
    "keywords": "Class AssignCreationInfoToTenantCommand Namespace MaintenanceChronicle.Application.Contracts.Tenants.Commands Assembly MaintenanceChronicle.Application.Contracts.dll public record AssignCreationInfoToTenantCommand : IRequest, IBaseRequest, IEquatable<AssignCreationInfoToTenantCommand> Inheritance object AssignCreationInfoToTenantCommand Implements IRequest IBaseRequest IEquatable<AssignCreationInfoToTenantCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AssignCreationInfoToTenantCommand(TenantsCreatorUserIdDto) public AssignCreationInfoToTenantCommand(TenantsCreatorUserIdDto TenantsCreatorUserIdDto) Parameters TenantsCreatorUserIdDto TenantsCreatorUserIdDto Properties TenantsCreatorUserIdDto public TenantsCreatorUserIdDto TenantsCreatorUserIdDto { get; init; } Property Value TenantsCreatorUserIdDto"
  },
  "api/MaintenanceChronicle.Application.Contracts.Tenants.Commands.CreateNewTenantCommand.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Tenants.Commands.CreateNewTenantCommand.html",
    "title": "Class CreateNewTenantCommand | MaintenanceChronicleApiDocumantation",
    "keywords": "Class CreateNewTenantCommand Namespace MaintenanceChronicle.Application.Contracts.Tenants.Commands Assembly MaintenanceChronicle.Application.Contracts.dll public record CreateNewTenantCommand : IRequest<Guid>, IBaseRequest, IEquatable<CreateNewTenantCommand> Inheritance object CreateNewTenantCommand Implements IRequest<Guid> IBaseRequest IEquatable<CreateNewTenantCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateNewTenantCommand(NewTenantDto) public CreateNewTenantCommand(NewTenantDto NewTenantDto) Parameters NewTenantDto NewTenantDto Properties NewTenantDto public NewTenantDto NewTenantDto { get; init; } Property Value NewTenantDto"
  },
  "api/MaintenanceChronicle.Application.Contracts.Tenants.Commands.Dto.NewTenantDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Tenants.Commands.Dto.NewTenantDto.html",
    "title": "Class NewTenantDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class NewTenantDto Namespace MaintenanceChronicle.Application.Contracts.Tenants.Commands.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class NewTenantDto Inheritance object NewTenantDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Name public required string Name { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Tenants.Commands.Dto.TenantDetailDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Tenants.Commands.Dto.TenantDetailDto.html",
    "title": "Class TenantDetailDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class TenantDetailDto Namespace MaintenanceChronicle.Application.Contracts.Tenants.Commands.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class TenantDetailDto Inheritance object TenantDetailDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id public required Guid Id { get; set; } Property Value Guid Name public required string Name { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Tenants.Commands.Dto.TenantsCreatorUserIdDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Tenants.Commands.Dto.TenantsCreatorUserIdDto.html",
    "title": "Class TenantsCreatorUserIdDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class TenantsCreatorUserIdDto Namespace MaintenanceChronicle.Application.Contracts.Tenants.Commands.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class TenantsCreatorUserIdDto Inheritance object TenantsCreatorUserIdDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties TenantId public required Guid TenantId { get; set; } Property Value Guid UserId public required string UserId { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Tenants.Commands.Dto.UserTenantClaimDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Tenants.Commands.Dto.UserTenantClaimDto.html",
    "title": "Class UserTenantClaimDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class UserTenantClaimDto Namespace MaintenanceChronicle.Application.Contracts.Tenants.Commands.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class UserTenantClaimDto Inheritance object UserTenantClaimDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email public required string Email { get; set; } Property Value string TenantId public required Guid TenantId { get; set; } Property Value Guid"
  },
  "api/MaintenanceChronicle.Application.Contracts.Tenants.Commands.Dto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Tenants.Commands.Dto.html",
    "title": "Namespace MaintenanceChronicle.Application.Contracts.Tenants.Commands.Dto | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Contracts.Tenants.Commands.Dto Classes NewTenantDto TenantDetailDto TenantsCreatorUserIdDto UserTenantClaimDto"
  },
  "api/MaintenanceChronicle.Application.Contracts.Tenants.Commands.UpdateTenantCommand.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Tenants.Commands.UpdateTenantCommand.html",
    "title": "Class UpdateTenantCommand | MaintenanceChronicleApiDocumantation",
    "keywords": "Class UpdateTenantCommand Namespace MaintenanceChronicle.Application.Contracts.Tenants.Commands Assembly MaintenanceChronicle.Application.Contracts.dll public record UpdateTenantCommand : IRequest, IBaseRequest, IEquatable<UpdateTenantCommand> Inheritance object UpdateTenantCommand Implements IRequest IBaseRequest IEquatable<UpdateTenantCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateTenantCommand(TenantDetailDto, string) public UpdateTenantCommand(TenantDetailDto TenantDetail, string UserId) Parameters TenantDetail TenantDetailDto UserId string Properties TenantDetail public TenantDetailDto TenantDetail { get; init; } Property Value TenantDetailDto UserId public string UserId { get; init; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Tenants.Commands.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Tenants.Commands.html",
    "title": "Namespace MaintenanceChronicle.Application.Contracts.Tenants.Commands | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Contracts.Tenants.Commands Classes AddTenantClaimToUserPrincipalCommand AssignCreationInfoToTenantCommand CreateNewTenantCommand UpdateTenantCommand"
  },
  "api/MaintenanceChronicle.Application.Contracts.Tenants.Queries.Dto.TenantDetailDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Tenants.Queries.Dto.TenantDetailDto.html",
    "title": "Class TenantDetailDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class TenantDetailDto Namespace MaintenanceChronicle.Application.Contracts.Tenants.Queries.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class TenantDetailDto Inheritance object TenantDetailDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id public Guid Id { get; set; } Property Value Guid Name public required string Name { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Tenants.Queries.Dto.TenantListDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Tenants.Queries.Dto.TenantListDto.html",
    "title": "Class TenantListDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class TenantListDto Namespace MaintenanceChronicle.Application.Contracts.Tenants.Queries.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class TenantListDto Inheritance object TenantListDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Id public Guid Id { get; set; } Property Value Guid Name public required string Name { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Tenants.Queries.Dto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Tenants.Queries.Dto.html",
    "title": "Namespace MaintenanceChronicle.Application.Contracts.Tenants.Queries.Dto | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Contracts.Tenants.Queries.Dto Classes TenantDetailDto TenantListDto"
  },
  "api/MaintenanceChronicle.Application.Contracts.UserTenant.Commands.Dto.UserTenantDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.UserTenant.Commands.Dto.UserTenantDto.html",
    "title": "Class UserTenantDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class UserTenantDto Namespace MaintenanceChronicle.Application.Contracts.UserTenant.Commands.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class UserTenantDto Inheritance object UserTenantDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email public required string Email { get; set; } Property Value string FirstName public required string FirstName { get; set; } Property Value string LastName public required string LastName { get; set; } Property Value string Password public required string Password { get; set; } Property Value string TenantName public required string TenantName { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.UserTenant.Commands.Dto.UserTenantIdsDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.UserTenant.Commands.Dto.UserTenantIdsDto.html",
    "title": "Class UserTenantIdsDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class UserTenantIdsDto Namespace MaintenanceChronicle.Application.Contracts.UserTenant.Commands.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class UserTenantIdsDto Inheritance object UserTenantIdsDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties TenantId public Guid TenantId { get; set; } Property Value Guid UserId public Guid UserId { get; set; } Property Value Guid"
  },
  "api/MaintenanceChronicle.Application.Contracts.UserTenant.Commands.Dto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.UserTenant.Commands.Dto.html",
    "title": "Namespace MaintenanceChronicle.Application.Contracts.UserTenant.Commands.Dto | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Contracts.UserTenant.Commands.Dto Classes UserTenantDto UserTenantIdsDto"
  },
  "api/MaintenanceChronicle.Application.Contracts.UserTenant.Commands.RegisterUserAndTenantCommand.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.UserTenant.Commands.RegisterUserAndTenantCommand.html",
    "title": "Class RegisterUserAndTenantCommand | MaintenanceChronicleApiDocumantation",
    "keywords": "Class RegisterUserAndTenantCommand Namespace MaintenanceChronicle.Application.Contracts.UserTenant.Commands Assembly MaintenanceChronicle.Application.Contracts.dll public record RegisterUserAndTenantCommand : IRequest<UserTenantIdsDto>, IBaseRequest, IEquatable<RegisterUserAndTenantCommand> Inheritance object RegisterUserAndTenantCommand Implements IRequest<UserTenantIdsDto> IBaseRequest IEquatable<RegisterUserAndTenantCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RegisterUserAndTenantCommand(UserTenantDto) public RegisterUserAndTenantCommand(UserTenantDto UserTenantDto) Parameters UserTenantDto UserTenantDto Properties UserTenantDto public UserTenantDto UserTenantDto { get; init; } Property Value UserTenantDto"
  },
  "api/MaintenanceChronicle.Application.Contracts.UserTenant.Commands.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.UserTenant.Commands.html",
    "title": "Namespace MaintenanceChronicle.Application.Contracts.UserTenant.Commands | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Contracts.UserTenant.Commands Classes RegisterUserAndTenantCommand"
  },
  "api/MaintenanceChronicle.Application.Contracts.Users.Commands.AddPasswordToRegisteredUserCommand.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Users.Commands.AddPasswordToRegisteredUserCommand.html",
    "title": "Class AddPasswordToRegisteredUserCommand | MaintenanceChronicleApiDocumantation",
    "keywords": "Class AddPasswordToRegisteredUserCommand Namespace MaintenanceChronicle.Application.Contracts.Users.Commands Assembly MaintenanceChronicle.Application.Contracts.dll public record AddPasswordToRegisteredUserCommand : IRequest, IBaseRequest, IEquatable<AddPasswordToRegisteredUserCommand> Inheritance object AddPasswordToRegisteredUserCommand Implements IRequest IBaseRequest IEquatable<AddPasswordToRegisteredUserCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AddPasswordToRegisteredUserCommand(AddPasswordToRegisteredUserDto) public AddPasswordToRegisteredUserCommand(AddPasswordToRegisteredUserDto UserPasswordDto) Parameters UserPasswordDto AddPasswordToRegisteredUserDto Properties UserPasswordDto public AddPasswordToRegisteredUserDto UserPasswordDto { get; init; } Property Value AddPasswordToRegisteredUserDto"
  },
  "api/MaintenanceChronicle.Application.Contracts.Users.Commands.AddRolesToUserCommand.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Users.Commands.AddRolesToUserCommand.html",
    "title": "Class AddRolesToUserCommand | MaintenanceChronicleApiDocumantation",
    "keywords": "Class AddRolesToUserCommand Namespace MaintenanceChronicle.Application.Contracts.Users.Commands Assembly MaintenanceChronicle.Application.Contracts.dll public record AddRolesToUserCommand : IRequest, IBaseRequest, IEquatable<AddRolesToUserCommand> Inheritance object AddRolesToUserCommand Implements IRequest IBaseRequest IEquatable<AddRolesToUserCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AddRolesToUserCommand(UserRolesDto, string, string) public AddRolesToUserCommand(UserRolesDto UserRoles, string UserId, string TenantId) Parameters UserRoles UserRolesDto UserId string TenantId string Properties TenantId public string TenantId { get; init; } Property Value string UserId public string UserId { get; init; } Property Value string UserRoles public UserRolesDto UserRoles { get; init; } Property Value UserRolesDto"
  },
  "api/MaintenanceChronicle.Application.Contracts.Users.Commands.CreateNewUserCommand.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Users.Commands.CreateNewUserCommand.html",
    "title": "Class CreateNewUserCommand | MaintenanceChronicleApiDocumantation",
    "keywords": "Class CreateNewUserCommand Namespace MaintenanceChronicle.Application.Contracts.Users.Commands Assembly MaintenanceChronicle.Application.Contracts.dll public record CreateNewUserCommand : IRequest<Guid>, IBaseRequest, IEquatable<CreateNewUserCommand> Inheritance object CreateNewUserCommand Implements IRequest<Guid> IBaseRequest IEquatable<CreateNewUserCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateNewUserCommand(CreateNewUserDto, string, string) public CreateNewUserCommand(CreateNewUserDto NewUserDto, string UserId, string TenantId) Parameters NewUserDto CreateNewUserDto UserId string TenantId string Properties NewUserDto public CreateNewUserDto NewUserDto { get; init; } Property Value CreateNewUserDto TenantId public string TenantId { get; init; } Property Value string UserId public string UserId { get; init; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Users.Commands.Dto.AddPasswordToRegisteredUserDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Users.Commands.Dto.AddPasswordToRegisteredUserDto.html",
    "title": "Class AddPasswordToRegisteredUserDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class AddPasswordToRegisteredUserDto Namespace MaintenanceChronicle.Application.Contracts.Users.Commands.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class AddPasswordToRegisteredUserDto Inheritance object AddPasswordToRegisteredUserDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email public required string Email { get; set; } Property Value string Password public required string Password { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Users.Commands.Dto.CreateNewUserDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Users.Commands.Dto.CreateNewUserDto.html",
    "title": "Class CreateNewUserDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class CreateNewUserDto Namespace MaintenanceChronicle.Application.Contracts.Users.Commands.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class CreateNewUserDto Inheritance object CreateNewUserDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email public required string Email { get; set; } Property Value string FirstName public required string FirstName { get; set; } Property Value string LastName public required string LastName { get; set; } Property Value string Roles public Guid[] Roles { get; set; } Property Value Guid[]"
  },
  "api/MaintenanceChronicle.Application.Contracts.Users.Commands.Dto.EmailConfirmTokenForUserDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Users.Commands.Dto.EmailConfirmTokenForUserDto.html",
    "title": "Class EmailConfirmTokenForUserDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class EmailConfirmTokenForUserDto Namespace MaintenanceChronicle.Application.Contracts.Users.Commands.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class EmailConfirmTokenForUserDto Inheritance object EmailConfirmTokenForUserDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email public required string Email { get; set; } Property Value string Token public required string Token { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Users.Commands.Dto.LoginDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Users.Commands.Dto.LoginDto.html",
    "title": "Class LoginDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class LoginDto Namespace MaintenanceChronicle.Application.Contracts.Users.Commands.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class LoginDto Inheritance object LoginDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email public required string Email { get; set; } Property Value string Password public required string Password { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Users.Commands.Dto.RegisterUserDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Users.Commands.Dto.RegisterUserDto.html",
    "title": "Class RegisterUserDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class RegisterUserDto Namespace MaintenanceChronicle.Application.Contracts.Users.Commands.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class RegisterUserDto Inheritance object RegisterUserDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email public required string Email { get; set; } Property Value string FirstName public required string FirstName { get; set; } Property Value string LastName public required string LastName { get; set; } Property Value string Password public required string Password { get; set; } Property Value string TenantId public required Guid TenantId { get; set; } Property Value Guid"
  },
  "api/MaintenanceChronicle.Application.Contracts.Users.Commands.Dto.UpdateUserDetailDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Users.Commands.Dto.UpdateUserDetailDto.html",
    "title": "Class UpdateUserDetailDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class UpdateUserDetailDto Namespace MaintenanceChronicle.Application.Contracts.Users.Commands.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class UpdateUserDetailDto Inheritance object UpdateUserDetailDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email public required string Email { get; set; } Property Value string FirstName public required string FirstName { get; set; } Property Value string Id public required Guid Id { get; set; } Property Value Guid LastName public required string LastName { get; set; } Property Value string Roles public Guid[] Roles { get; set; } Property Value Guid[]"
  },
  "api/MaintenanceChronicle.Application.Contracts.Users.Commands.Dto.UserRolesDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Users.Commands.Dto.UserRolesDto.html",
    "title": "Class UserRolesDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class UserRolesDto Namespace MaintenanceChronicle.Application.Contracts.Users.Commands.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class UserRolesDto Inheritance object UserRolesDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties RoleIds public Guid[] RoleIds { get; set; } Property Value Guid[] UserId public required Guid UserId { get; set; } Property Value Guid"
  },
  "api/MaintenanceChronicle.Application.Contracts.Users.Commands.Dto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Users.Commands.Dto.html",
    "title": "Namespace MaintenanceChronicle.Application.Contracts.Users.Commands.Dto | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Contracts.Users.Commands.Dto Classes AddPasswordToRegisteredUserDto CreateNewUserDto EmailConfirmTokenForUserDto LoginDto RegisterUserDto UpdateUserDetailDto UserRolesDto"
  },
  "api/MaintenanceChronicle.Application.Contracts.Users.Commands.GenerateClaimsPrincipalForUserCommand.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Users.Commands.GenerateClaimsPrincipalForUserCommand.html",
    "title": "Class GenerateClaimsPrincipalForUserCommand | MaintenanceChronicleApiDocumantation",
    "keywords": "Class GenerateClaimsPrincipalForUserCommand Namespace MaintenanceChronicle.Application.Contracts.Users.Commands Assembly MaintenanceChronicle.Application.Contracts.dll public record GenerateClaimsPrincipalForUserCommand : IRequest<ClaimsPrincipal>, IBaseRequest, IEquatable<GenerateClaimsPrincipalForUserCommand> Inheritance object GenerateClaimsPrincipalForUserCommand Implements IRequest<ClaimsPrincipal> IBaseRequest IEquatable<GenerateClaimsPrincipalForUserCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GenerateClaimsPrincipalForUserCommand(LoginDto) public GenerateClaimsPrincipalForUserCommand(LoginDto UserLogin) Parameters UserLogin LoginDto Properties UserLogin public LoginDto UserLogin { get; init; } Property Value LoginDto"
  },
  "api/MaintenanceChronicle.Application.Contracts.Users.Commands.GenerateEmailConfirmationTokenForUserCommand.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Users.Commands.GenerateEmailConfirmationTokenForUserCommand.html",
    "title": "Class GenerateEmailConfirmationTokenForUserCommand | MaintenanceChronicleApiDocumantation",
    "keywords": "Class GenerateEmailConfirmationTokenForUserCommand Namespace MaintenanceChronicle.Application.Contracts.Users.Commands Assembly MaintenanceChronicle.Application.Contracts.dll public class GenerateEmailConfirmationTokenForUserCommand : IRequest<string>, IBaseRequest Inheritance object GenerateEmailConfirmationTokenForUserCommand Implements IRequest<string> IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GenerateEmailConfirmationTokenForUserCommand(string) public GenerateEmailConfirmationTokenForUserCommand(string email) Parameters email string Properties Email public string Email { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Users.Commands.RegisterNewUserCommand.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Users.Commands.RegisterNewUserCommand.html",
    "title": "Class RegisterNewUserCommand | MaintenanceChronicleApiDocumantation",
    "keywords": "Class RegisterNewUserCommand Namespace MaintenanceChronicle.Application.Contracts.Users.Commands Assembly MaintenanceChronicle.Application.Contracts.dll public record RegisterNewUserCommand : IRequest<Guid>, IBaseRequest, IEquatable<RegisterNewUserCommand> Inheritance object RegisterNewUserCommand Implements IRequest<Guid> IBaseRequest IEquatable<RegisterNewUserCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RegisterNewUserCommand(RegisterUserDto) public RegisterNewUserCommand(RegisterUserDto NewUserDto) Parameters NewUserDto RegisterUserDto Properties NewUserDto public RegisterUserDto NewUserDto { get; init; } Property Value RegisterUserDto"
  },
  "api/MaintenanceChronicle.Application.Contracts.Users.Commands.UpdateUserCommand.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Users.Commands.UpdateUserCommand.html",
    "title": "Class UpdateUserCommand | MaintenanceChronicleApiDocumantation",
    "keywords": "Class UpdateUserCommand Namespace MaintenanceChronicle.Application.Contracts.Users.Commands Assembly MaintenanceChronicle.Application.Contracts.dll public record UpdateUserCommand : IRequest, IBaseRequest, IEquatable<UpdateUserCommand> Inheritance object UpdateUserCommand Implements IRequest IBaseRequest IEquatable<UpdateUserCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateUserCommand(UpdateUserDetailDto, string) public UpdateUserCommand(UpdateUserDetailDto UpdateUserDetailDto, string UserId) Parameters UpdateUserDetailDto UpdateUserDetailDto UserId string Properties UpdateUserDetailDto public UpdateUserDetailDto UpdateUserDetailDto { get; init; } Property Value UpdateUserDetailDto UserId public string UserId { get; init; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Users.Commands.ValidateEmailConfirmationTokenCommand.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Users.Commands.ValidateEmailConfirmationTokenCommand.html",
    "title": "Class ValidateEmailConfirmationTokenCommand | MaintenanceChronicleApiDocumantation",
    "keywords": "Class ValidateEmailConfirmationTokenCommand Namespace MaintenanceChronicle.Application.Contracts.Users.Commands Assembly MaintenanceChronicle.Application.Contracts.dll public class ValidateEmailConfirmationTokenCommand : IRequest, IBaseRequest Inheritance object ValidateEmailConfirmationTokenCommand Implements IRequest IBaseRequest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ValidateEmailConfirmationTokenCommand(EmailConfirmTokenForUserDto) public ValidateEmailConfirmationTokenCommand(EmailConfirmTokenForUserDto emailConfirmTokenForUserDto) Parameters emailConfirmTokenForUserDto EmailConfirmTokenForUserDto Properties EmailConfirmTokenForUserDto public EmailConfirmTokenForUserDto EmailConfirmTokenForUserDto { get; set; } Property Value EmailConfirmTokenForUserDto"
  },
  "api/MaintenanceChronicle.Application.Contracts.Users.Commands.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Users.Commands.html",
    "title": "Namespace MaintenanceChronicle.Application.Contracts.Users.Commands | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Contracts.Users.Commands Classes AddPasswordToRegisteredUserCommand AddRolesToUserCommand CreateNewUserCommand GenerateClaimsPrincipalForUserCommand GenerateEmailConfirmationTokenForUserCommand RegisterNewUserCommand UpdateUserCommand ValidateEmailConfirmationTokenCommand"
  },
  "api/MaintenanceChronicle.Application.Contracts.Users.Queries.Dto.UserDetailDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Users.Queries.Dto.UserDetailDto.html",
    "title": "Class UserDetailDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class UserDetailDto Namespace MaintenanceChronicle.Application.Contracts.Users.Queries.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class UserDetailDto Inheritance object UserDetailDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email public required string Email { get; set; } Property Value string FirstName public required string FirstName { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid LastName public required string LastName { get; set; } Property Value string Roles public List<RoleDetailDto> Roles { get; set; } Property Value List<RoleDetailDto>"
  },
  "api/MaintenanceChronicle.Application.Contracts.Users.Queries.Dto.UserListDto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Users.Queries.Dto.UserListDto.html",
    "title": "Class UserListDto | MaintenanceChronicleApiDocumantation",
    "keywords": "Class UserListDto Namespace MaintenanceChronicle.Application.Contracts.Users.Queries.Dto Assembly MaintenanceChronicle.Application.Contracts.dll public class UserListDto Inheritance object UserListDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email public required string Email { get; set; } Property Value string FirstName public required string FirstName { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid LastName public required string LastName { get; set; } Property Value string Roles public List<RoleDetailDto> Roles { get; set; } Property Value List<RoleDetailDto>"
  },
  "api/MaintenanceChronicle.Application.Contracts.Users.Queries.Dto.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Users.Queries.Dto.html",
    "title": "Namespace MaintenanceChronicle.Application.Contracts.Users.Queries.Dto | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Contracts.Users.Queries.Dto Classes UserDetailDto UserListDto"
  },
  "api/MaintenanceChronicle.Application.Contracts.Users.Queries.GetTenantIdFromUserCommand.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Users.Queries.GetTenantIdFromUserCommand.html",
    "title": "Class GetTenantIdFromUserCommand | MaintenanceChronicleApiDocumantation",
    "keywords": "Class GetTenantIdFromUserCommand Namespace MaintenanceChronicle.Application.Contracts.Users.Queries Assembly MaintenanceChronicle.Application.Contracts.dll public record GetTenantIdFromUserCommand : IRequest<Guid>, IBaseRequest, IEquatable<GetTenantIdFromUserCommand> Inheritance object GetTenantIdFromUserCommand Implements IRequest<Guid> IBaseRequest IEquatable<GetTenantIdFromUserCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetTenantIdFromUserCommand(string) public GetTenantIdFromUserCommand(string Email) Parameters Email string Properties Email public string Email { get; init; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Users.Queries.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Users.Queries.html",
    "title": "Namespace MaintenanceChronicle.Application.Contracts.Users.Queries | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Contracts.Users.Queries Classes GetTenantIdFromUserCommand"
  },
  "api/MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand-1.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand-1.html",
    "title": "Class DeleteEntityByIdCommand<TEntity> | MaintenanceChronicleApiDocumantation",
    "keywords": "Class DeleteEntityByIdCommand<TEntity> Namespace MaintenanceChronicle.Application.Contracts.Utils.Commands Assembly MaintenanceChronicle.Application.Contracts.dll public record DeleteEntityByIdCommand<TEntity> : IRequest, IBaseRequest, IEquatable<DeleteEntityByIdCommand<TEntity>> Type Parameters TEntity Inheritance object DeleteEntityByIdCommand<TEntity> Implements IRequest IBaseRequest IEquatable<DeleteEntityByIdCommand<TEntity>> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteEntityByIdCommand(Guid, string) public DeleteEntityByIdCommand(Guid Id, string UserId) Parameters Id Guid UserId string Properties Id public Guid Id { get; init; } Property Value Guid UserId public string UserId { get; init; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Utils.Commands.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Utils.Commands.html",
    "title": "Namespace MaintenanceChronicle.Application.Contracts.Utils.Commands | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Contracts.Utils.Commands Classes DeleteEntityByIdCommand<TEntity>"
  },
  "api/MaintenanceChronicle.Application.Contracts.Utils.Queries.GetEntityByIdQuery-1.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Utils.Queries.GetEntityByIdQuery-1.html",
    "title": "Class GetEntityByIdQuery<TEntity> | MaintenanceChronicleApiDocumantation",
    "keywords": "Class GetEntityByIdQuery<TEntity> Namespace MaintenanceChronicle.Application.Contracts.Utils.Queries Assembly MaintenanceChronicle.Application.Contracts.dll public record GetEntityByIdQuery<TEntity> : IRequest<TEntity>, IBaseRequest, IEquatable<GetEntityByIdQuery<TEntity>> Type Parameters TEntity Inheritance object GetEntityByIdQuery<TEntity> Implements IRequest<TEntity> IBaseRequest IEquatable<GetEntityByIdQuery<TEntity>> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetEntityByIdQuery(Guid) public GetEntityByIdQuery(Guid Id) Parameters Id Guid Properties Id public Guid Id { get; init; } Property Value Guid"
  },
  "api/MaintenanceChronicle.Application.Contracts.Utils.Queries.GetEntityByNameQuery-1.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Utils.Queries.GetEntityByNameQuery-1.html",
    "title": "Class GetEntityByNameQuery<TEntity> | MaintenanceChronicleApiDocumantation",
    "keywords": "Class GetEntityByNameQuery<TEntity> Namespace MaintenanceChronicle.Application.Contracts.Utils.Queries Assembly MaintenanceChronicle.Application.Contracts.dll public record GetEntityByNameQuery<TEntity> : IRequest<TEntity>, IBaseRequest, IEquatable<GetEntityByNameQuery<TEntity>> Type Parameters TEntity Inheritance object GetEntityByNameQuery<TEntity> Implements IRequest<TEntity> IBaseRequest IEquatable<GetEntityByNameQuery<TEntity>> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetEntityByNameQuery(string) public GetEntityByNameQuery(string Name) Parameters Name string Properties Name public string Name { get; init; } Property Value string"
  },
  "api/MaintenanceChronicle.Application.Contracts.Utils.Queries.GetListOfEntityQuery-1.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Utils.Queries.GetListOfEntityQuery-1.html",
    "title": "Class GetListOfEntityQuery<TEntity> | MaintenanceChronicleApiDocumantation",
    "keywords": "Class GetListOfEntityQuery<TEntity> Namespace MaintenanceChronicle.Application.Contracts.Utils.Queries Assembly MaintenanceChronicle.Application.Contracts.dll public record GetListOfEntityQuery<TEntity> : IRequest<List<TEntity>>, IBaseRequest, IEquatable<GetListOfEntityQuery<TEntity>> Type Parameters TEntity Inheritance object GetListOfEntityQuery<TEntity> Implements IRequest<List<TEntity>> IBaseRequest IEquatable<GetListOfEntityQuery<TEntity>> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetListOfEntityQuery() public GetListOfEntityQuery()"
  },
  "api/MaintenanceChronicle.Application.Contracts.Utils.Queries.html": {
    "href": "api/MaintenanceChronicle.Application.Contracts.Utils.Queries.html",
    "title": "Namespace MaintenanceChronicle.Application.Contracts.Utils.Queries | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Contracts.Utils.Queries Classes GetEntityByIdQuery<TEntity> GetEntityByNameQuery<TEntity> GetListOfEntityQuery<TEntity>"
  },
  "api/MaintenanceChronicle.Application.Customers.Commands.CreateNewCustomerCommandHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Customers.Commands.CreateNewCustomerCommandHandler.html",
    "title": "Class CreateNewCustomerCommandHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class CreateNewCustomerCommandHandler Namespace MaintenanceChronicle.Application.Customers.Commands Assembly MaintenanceChronicle.Application.dll public class CreateNewCustomerCommandHandler : IRequestHandler<CreateNewCustomerCommand, Guid> Inheritance object CreateNewCustomerCommandHandler Implements IRequestHandler<CreateNewCustomerCommand, Guid> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateNewCustomerCommandHandler(AppDbContext, IClock) public CreateNewCustomerCommandHandler(AppDbContext dbContext, IClock clock) Parameters dbContext AppDbContext clock IClock Methods Handle(CreateNewCustomerCommand, CancellationToken) Handles a request public Task<Guid> Handle(CreateNewCustomerCommand request, CancellationToken cancellationToken) Parameters request CreateNewCustomerCommand The request cancellationToken CancellationToken Cancellation token Returns Task<Guid> Response from the request"
  },
  "api/MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler.html",
    "title": "Class DeleteCustomerCommandHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class DeleteCustomerCommandHandler Namespace MaintenanceChronicle.Application.Customers.Commands Assembly MaintenanceChronicle.Application.dll public class DeleteCustomerCommandHandler : IRequestHandler<DeleteEntityByIdCommand<Customer>> Inheritance object DeleteCustomerCommandHandler Implements IRequestHandler<DeleteEntityByIdCommand<Customer>> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteCustomerCommandHandler(AppDbContext, IClock) public DeleteCustomerCommandHandler(AppDbContext dbContext, IClock clock) Parameters dbContext AppDbContext clock IClock Methods Handle(DeleteEntityByIdCommand<Customer>, CancellationToken) Handles a request public Task Handle(DeleteEntityByIdCommand<Customer> request, CancellationToken cancellationToken) Parameters request DeleteEntityByIdCommand<Customer> The request cancellationToken CancellationToken Cancellation token Returns Task Response from the request"
  },
  "api/MaintenanceChronicle.Application.Customers.Commands.UpdateCustomerCommandHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Customers.Commands.UpdateCustomerCommandHandler.html",
    "title": "Class UpdateCustomerCommandHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class UpdateCustomerCommandHandler Namespace MaintenanceChronicle.Application.Customers.Commands Assembly MaintenanceChronicle.Application.dll public class UpdateCustomerCommandHandler : IRequestHandler<UpdateCustomerCommand, ManageCustomerDetailDto> Inheritance object UpdateCustomerCommandHandler Implements IRequestHandler<UpdateCustomerCommand, ManageCustomerDetailDto> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateCustomerCommandHandler(AppDbContext, IClock) public UpdateCustomerCommandHandler(AppDbContext dbContext, IClock clock) Parameters dbContext AppDbContext clock IClock Methods Handle(UpdateCustomerCommand, CancellationToken) Handles a request public Task<ManageCustomerDetailDto> Handle(UpdateCustomerCommand request, CancellationToken cancellationToken) Parameters request UpdateCustomerCommand The request cancellationToken CancellationToken Cancellation token Returns Task<ManageCustomerDetailDto> Response from the request"
  },
  "api/MaintenanceChronicle.Application.Customers.Commands.html": {
    "href": "api/MaintenanceChronicle.Application.Customers.Commands.html",
    "title": "Namespace MaintenanceChronicle.Application.Customers.Commands | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Customers.Commands Classes CreateNewCustomerCommandHandler DeleteCustomerCommandHandler UpdateCustomerCommandHandler"
  },
  "api/MaintenanceChronicle.Application.Customers.Queries.GetCustomerByIdQueryHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Customers.Queries.GetCustomerByIdQueryHandler.html",
    "title": "Class GetCustomerByIdQueryHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class GetCustomerByIdQueryHandler Namespace MaintenanceChronicle.Application.Customers.Queries Assembly MaintenanceChronicle.Application.dll public class GetCustomerByIdQueryHandler : IRequestHandler<GetEntityByIdQuery<CustomerDetailDto>, CustomerDetailDto> Inheritance object GetCustomerByIdQueryHandler Implements IRequestHandler<GetEntityByIdQuery<CustomerDetailDto>, CustomerDetailDto> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetCustomerByIdQueryHandler(AppDbContext) public GetCustomerByIdQueryHandler(AppDbContext dbContext) Parameters dbContext AppDbContext Methods Handle(GetEntityByIdQuery<CustomerDetailDto>, CancellationToken) Handles a request public Task<CustomerDetailDto> Handle(GetEntityByIdQuery<CustomerDetailDto> request, CancellationToken cancellationToken) Parameters request GetEntityByIdQuery<CustomerDetailDto> The request cancellationToken CancellationToken Cancellation token Returns Task<CustomerDetailDto> Response from the request"
  },
  "api/MaintenanceChronicle.Application.Customers.Queries.GetListOfCustomersQueryHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Customers.Queries.GetListOfCustomersQueryHandler.html",
    "title": "Class GetListOfCustomersQueryHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class GetListOfCustomersQueryHandler Namespace MaintenanceChronicle.Application.Customers.Queries Assembly MaintenanceChronicle.Application.dll public class GetListOfCustomersQueryHandler : IRequestHandler<GetListOfEntityQuery<CustomerInListDto>, List<CustomerInListDto>> Inheritance object GetListOfCustomersQueryHandler Implements IRequestHandler<GetListOfEntityQuery<CustomerInListDto>, List<CustomerInListDto>> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetListOfCustomersQueryHandler(AppDbContext) public GetListOfCustomersQueryHandler(AppDbContext dbContext) Parameters dbContext AppDbContext Methods Handle(GetListOfEntityQuery<CustomerInListDto>, CancellationToken) Handles a request public Task<List<CustomerInListDto>> Handle(GetListOfEntityQuery<CustomerInListDto> request, CancellationToken cancellationToken) Parameters request GetListOfEntityQuery<CustomerInListDto> The request cancellationToken CancellationToken Cancellation token Returns Task<List<CustomerInListDto>> Response from the request"
  },
  "api/MaintenanceChronicle.Application.Customers.Queries.html": {
    "href": "api/MaintenanceChronicle.Application.Customers.Queries.html",
    "title": "Namespace MaintenanceChronicle.Application.Customers.Queries | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Customers.Queries Classes GetCustomerByIdQueryHandler GetListOfCustomersQueryHandler"
  },
  "api/MaintenanceChronicle.Application.LocationContactUsers.Queries.GetListOfContactsForLocationQueryHandler.html": {
    "href": "api/MaintenanceChronicle.Application.LocationContactUsers.Queries.GetListOfContactsForLocationQueryHandler.html",
    "title": "Class GetListOfContactsForLocationQueryHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class GetListOfContactsForLocationQueryHandler Namespace MaintenanceChronicle.Application.LocationContactUsers.Queries Assembly MaintenanceChronicle.Application.dll public class GetListOfContactsForLocationQueryHandler : IRequestHandler<GetListOfContactsForLocationQuery, List<LocationContactInListDto>> Inheritance object GetListOfContactsForLocationQueryHandler Implements IRequestHandler<GetListOfContactsForLocationQuery, List<LocationContactInListDto>> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetListOfContactsForLocationQueryHandler(AppDbContext) public GetListOfContactsForLocationQueryHandler(AppDbContext dbContext) Parameters dbContext AppDbContext Methods Handle(GetListOfContactsForLocationQuery, CancellationToken) Handles a request public Task<List<LocationContactInListDto>> Handle(GetListOfContactsForLocationQuery request, CancellationToken cancellationToken) Parameters request GetListOfContactsForLocationQuery The request cancellationToken CancellationToken Cancellation token Returns Task<List<LocationContactInListDto>> Response from the request"
  },
  "api/MaintenanceChronicle.Application.LocationContactUsers.Queries.html": {
    "href": "api/MaintenanceChronicle.Application.LocationContactUsers.Queries.html",
    "title": "Namespace MaintenanceChronicle.Application.LocationContactUsers.Queries | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.LocationContactUsers.Queries Classes GetListOfContactsForLocationQueryHandler"
  },
  "api/MaintenanceChronicle.Application.Locations.Commands.CreateNewLocationCommandHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Locations.Commands.CreateNewLocationCommandHandler.html",
    "title": "Class CreateNewLocationCommandHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class CreateNewLocationCommandHandler Namespace MaintenanceChronicle.Application.Locations.Commands Assembly MaintenanceChronicle.Application.dll public class CreateNewLocationCommandHandler : IRequestHandler<CreateNewLocationCommand, Guid> Inheritance object CreateNewLocationCommandHandler Implements IRequestHandler<CreateNewLocationCommand, Guid> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateNewLocationCommandHandler(AppDbContext, IClock) public CreateNewLocationCommandHandler(AppDbContext dbContext, IClock clock) Parameters dbContext AppDbContext clock IClock Methods Handle(CreateNewLocationCommand, CancellationToken) Handles a request public Task<Guid> Handle(CreateNewLocationCommand request, CancellationToken cancellationToken) Parameters request CreateNewLocationCommand The request cancellationToken CancellationToken Cancellation token Returns Task<Guid> Response from the request"
  },
  "api/MaintenanceChronicle.Application.Locations.Commands.DeleteLocationCommandHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Locations.Commands.DeleteLocationCommandHandler.html",
    "title": "Class DeleteLocationCommandHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class DeleteLocationCommandHandler Namespace MaintenanceChronicle.Application.Locations.Commands Assembly MaintenanceChronicle.Application.dll public class DeleteLocationCommandHandler : IRequestHandler<DeleteEntityByIdCommand<Location>> Inheritance object DeleteLocationCommandHandler Implements IRequestHandler<DeleteEntityByIdCommand<Location>> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteLocationCommandHandler(AppDbContext, IClock) public DeleteLocationCommandHandler(AppDbContext dbContext, IClock clock) Parameters dbContext AppDbContext clock IClock Methods Handle(DeleteEntityByIdCommand<Location>, CancellationToken) Handles a request public Task Handle(DeleteEntityByIdCommand<Location> request, CancellationToken cancellationToken) Parameters request DeleteEntityByIdCommand<Location> The request cancellationToken CancellationToken Cancellation token Returns Task Response from the request"
  },
  "api/MaintenanceChronicle.Application.Locations.Commands.ManageContactsInLocationCommandHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Locations.Commands.ManageContactsInLocationCommandHandler.html",
    "title": "Class ManageContactsInLocationCommandHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class ManageContactsInLocationCommandHandler Namespace MaintenanceChronicle.Application.Locations.Commands Assembly MaintenanceChronicle.Application.dll public class ManageContactsInLocationCommandHandler : IRequestHandler<ManageContactsInLocationCommand> Inheritance object ManageContactsInLocationCommandHandler Implements IRequestHandler<ManageContactsInLocationCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ManageContactsInLocationCommandHandler(AppDbContext, IClock) public ManageContactsInLocationCommandHandler(AppDbContext dbContext, IClock clock) Parameters dbContext AppDbContext clock IClock Methods Handle(ManageContactsInLocationCommand, CancellationToken) Handles a request public Task Handle(ManageContactsInLocationCommand request, CancellationToken cancellationToken) Parameters request ManageContactsInLocationCommand The request cancellationToken CancellationToken Cancellation token Returns Task Response from the request"
  },
  "api/MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler.html",
    "title": "Class UpdateLocationCommandHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class UpdateLocationCommandHandler Namespace MaintenanceChronicle.Application.Locations.Commands Assembly MaintenanceChronicle.Application.dll public class UpdateLocationCommandHandler : IRequestHandler<UpdateLocationCommand, ManageLocationDetailDto> Inheritance object UpdateLocationCommandHandler Implements IRequestHandler<UpdateLocationCommand, ManageLocationDetailDto> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateLocationCommandHandler(AppDbContext, IClock) public UpdateLocationCommandHandler(AppDbContext dbContext, IClock clock) Parameters dbContext AppDbContext clock IClock Methods Handle(UpdateLocationCommand, CancellationToken) Handles a request public Task<ManageLocationDetailDto> Handle(UpdateLocationCommand request, CancellationToken cancellationToken) Parameters request UpdateLocationCommand The request cancellationToken CancellationToken Cancellation token Returns Task<ManageLocationDetailDto> Response from the request"
  },
  "api/MaintenanceChronicle.Application.Locations.Commands.html": {
    "href": "api/MaintenanceChronicle.Application.Locations.Commands.html",
    "title": "Namespace MaintenanceChronicle.Application.Locations.Commands | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Locations.Commands Classes CreateNewLocationCommandHandler DeleteLocationCommandHandler ManageContactsInLocationCommandHandler UpdateLocationCommandHandler"
  },
  "api/MaintenanceChronicle.Application.Locations.Queries.GetListOfLocationsQueryHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Locations.Queries.GetListOfLocationsQueryHandler.html",
    "title": "Class GetListOfLocationsQueryHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class GetListOfLocationsQueryHandler Namespace MaintenanceChronicle.Application.Locations.Queries Assembly MaintenanceChronicle.Application.dll public class GetListOfLocationsQueryHandler : IRequestHandler<GetListOfEntityQuery<LocationInListDto>, List<LocationInListDto>> Inheritance object GetListOfLocationsQueryHandler Implements IRequestHandler<GetListOfEntityQuery<LocationInListDto>, List<LocationInListDto>> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetListOfLocationsQueryHandler(AppDbContext) public GetListOfLocationsQueryHandler(AppDbContext dbContext) Parameters dbContext AppDbContext Methods Handle(GetListOfEntityQuery<LocationInListDto>, CancellationToken) Handles a request public Task<List<LocationInListDto>> Handle(GetListOfEntityQuery<LocationInListDto> request, CancellationToken cancellationToken) Parameters request GetListOfEntityQuery<LocationInListDto> The request cancellationToken CancellationToken Cancellation token Returns Task<List<LocationInListDto>> Response from the request"
  },
  "api/MaintenanceChronicle.Application.Locations.Queries.GetLocationByIdQueryHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Locations.Queries.GetLocationByIdQueryHandler.html",
    "title": "Class GetLocationByIdQueryHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class GetLocationByIdQueryHandler Namespace MaintenanceChronicle.Application.Locations.Queries Assembly MaintenanceChronicle.Application.dll public class GetLocationByIdQueryHandler : IRequestHandler<GetEntityByIdQuery<LocationDetailDto>, LocationDetailDto> Inheritance object GetLocationByIdQueryHandler Implements IRequestHandler<GetEntityByIdQuery<LocationDetailDto>, LocationDetailDto> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetLocationByIdQueryHandler(AppDbContext) public GetLocationByIdQueryHandler(AppDbContext dbContext) Parameters dbContext AppDbContext Methods Handle(GetEntityByIdQuery<LocationDetailDto>, CancellationToken) Handles a request public Task<LocationDetailDto> Handle(GetEntityByIdQuery<LocationDetailDto> request, CancellationToken cancellationToken) Parameters request GetEntityByIdQuery<LocationDetailDto> The request cancellationToken CancellationToken Cancellation token Returns Task<LocationDetailDto> Response from the request"
  },
  "api/MaintenanceChronicle.Application.Locations.Queries.GetLocationsForCustomerQueryHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Locations.Queries.GetLocationsForCustomerQueryHandler.html",
    "title": "Class GetLocationsForCustomerQueryHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class GetLocationsForCustomerQueryHandler Namespace MaintenanceChronicle.Application.Locations.Queries Assembly MaintenanceChronicle.Application.dll public class GetLocationsForCustomerQueryHandler : IRequestHandler<GetLocationsForCustomerQuery, List<LocationInListDto>> Inheritance object GetLocationsForCustomerQueryHandler Implements IRequestHandler<GetLocationsForCustomerQuery, List<LocationInListDto>> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetLocationsForCustomerQueryHandler(AppDbContext) public GetLocationsForCustomerQueryHandler(AppDbContext dbContext) Parameters dbContext AppDbContext Methods Handle(GetLocationsForCustomerQuery, CancellationToken) Handles a request public Task<List<LocationInListDto>> Handle(GetLocationsForCustomerQuery request, CancellationToken cancellationToken) Parameters request GetLocationsForCustomerQuery The request cancellationToken CancellationToken Cancellation token Returns Task<List<LocationInListDto>> Response from the request"
  },
  "api/MaintenanceChronicle.Application.Locations.Queries.html": {
    "href": "api/MaintenanceChronicle.Application.Locations.Queries.html",
    "title": "Namespace MaintenanceChronicle.Application.Locations.Queries | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Locations.Queries Classes GetListOfLocationsQueryHandler GetLocationByIdQueryHandler GetLocationsForCustomerQueryHandler"
  },
  "api/MaintenanceChronicle.Application.Machines.Commands.CreateNewMachineCommandHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Machines.Commands.CreateNewMachineCommandHandler.html",
    "title": "Class CreateNewMachineCommandHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class CreateNewMachineCommandHandler Namespace MaintenanceChronicle.Application.Machines.Commands Assembly MaintenanceChronicle.Application.dll public class CreateNewMachineCommandHandler : IRequestHandler<CreateNewMachineCommand, Guid> Inheritance object CreateNewMachineCommandHandler Implements IRequestHandler<CreateNewMachineCommand, Guid> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateNewMachineCommandHandler(AppDbContext, IClock) public CreateNewMachineCommandHandler(AppDbContext dbContext, IClock clock) Parameters dbContext AppDbContext clock IClock Methods Handle(CreateNewMachineCommand, CancellationToken) Handles a request public Task<Guid> Handle(CreateNewMachineCommand request, CancellationToken cancellationToken) Parameters request CreateNewMachineCommand The request cancellationToken CancellationToken Cancellation token Returns Task<Guid> Response from the request"
  },
  "api/MaintenanceChronicle.Application.Machines.Commands.DeleteMachineCommandHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Machines.Commands.DeleteMachineCommandHandler.html",
    "title": "Class DeleteMachineCommandHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class DeleteMachineCommandHandler Namespace MaintenanceChronicle.Application.Machines.Commands Assembly MaintenanceChronicle.Application.dll public class DeleteMachineCommandHandler : IRequestHandler<DeleteEntityByIdCommand<Machine>> Inheritance object DeleteMachineCommandHandler Implements IRequestHandler<DeleteEntityByIdCommand<Machine>> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DeleteMachineCommandHandler(AppDbContext, IClock) public DeleteMachineCommandHandler(AppDbContext dbContext, IClock clock) Parameters dbContext AppDbContext clock IClock Methods Handle(DeleteEntityByIdCommand<Machine>, CancellationToken) Handles a request public Task Handle(DeleteEntityByIdCommand<Machine> request, CancellationToken cancellationToken) Parameters request DeleteEntityByIdCommand<Machine> The request cancellationToken CancellationToken Cancellation token Returns Task Response from the request"
  },
  "api/MaintenanceChronicle.Application.Machines.Commands.UpdateMachineCommandHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Machines.Commands.UpdateMachineCommandHandler.html",
    "title": "Class UpdateMachineCommandHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class UpdateMachineCommandHandler Namespace MaintenanceChronicle.Application.Machines.Commands Assembly MaintenanceChronicle.Application.dll public class UpdateMachineCommandHandler : IRequestHandler<UpdateMachineCommand, ManageMachineDetailDto> Inheritance object UpdateMachineCommandHandler Implements IRequestHandler<UpdateMachineCommand, ManageMachineDetailDto> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateMachineCommandHandler(AppDbContext, IClock) public UpdateMachineCommandHandler(AppDbContext dbContext, IClock clock) Parameters dbContext AppDbContext clock IClock Methods Handle(UpdateMachineCommand, CancellationToken) Handles a request public Task<ManageMachineDetailDto> Handle(UpdateMachineCommand request, CancellationToken cancellationToken) Parameters request UpdateMachineCommand The request cancellationToken CancellationToken Cancellation token Returns Task<ManageMachineDetailDto> Response from the request"
  },
  "api/MaintenanceChronicle.Application.Machines.Commands.html": {
    "href": "api/MaintenanceChronicle.Application.Machines.Commands.html",
    "title": "Namespace MaintenanceChronicle.Application.Machines.Commands | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Machines.Commands Classes CreateNewMachineCommandHandler DeleteMachineCommandHandler UpdateMachineCommandHandler"
  },
  "api/MaintenanceChronicle.Application.Machines.Queries.GetListOfMachinesQueryHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Machines.Queries.GetListOfMachinesQueryHandler.html",
    "title": "Class GetListOfMachinesQueryHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class GetListOfMachinesQueryHandler Namespace MaintenanceChronicle.Application.Machines.Queries Assembly MaintenanceChronicle.Application.dll public class GetListOfMachinesQueryHandler : IRequestHandler<GetListOfEntityQuery<MachineInListDto>, List<MachineInListDto>> Inheritance object GetListOfMachinesQueryHandler Implements IRequestHandler<GetListOfEntityQuery<MachineInListDto>, List<MachineInListDto>> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetListOfMachinesQueryHandler(AppDbContext) public GetListOfMachinesQueryHandler(AppDbContext dbContext) Parameters dbContext AppDbContext Methods Handle(GetListOfEntityQuery<MachineInListDto>, CancellationToken) Handles a request public Task<List<MachineInListDto>> Handle(GetListOfEntityQuery<MachineInListDto> request, CancellationToken cancellationToken) Parameters request GetListOfEntityQuery<MachineInListDto> The request cancellationToken CancellationToken Cancellation token Returns Task<List<MachineInListDto>> Response from the request"
  },
  "api/MaintenanceChronicle.Application.Machines.Queries.GetMachineByIdQueryHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Machines.Queries.GetMachineByIdQueryHandler.html",
    "title": "Class GetMachineByIdQueryHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class GetMachineByIdQueryHandler Namespace MaintenanceChronicle.Application.Machines.Queries Assembly MaintenanceChronicle.Application.dll public class GetMachineByIdQueryHandler : IRequestHandler<GetEntityByIdQuery<MachineDetailDto>, MachineDetailDto> Inheritance object GetMachineByIdQueryHandler Implements IRequestHandler<GetEntityByIdQuery<MachineDetailDto>, MachineDetailDto> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetMachineByIdQueryHandler(AppDbContext) public GetMachineByIdQueryHandler(AppDbContext dbContext) Parameters dbContext AppDbContext Methods Handle(GetEntityByIdQuery<MachineDetailDto>, CancellationToken) Handles a request public Task<MachineDetailDto> Handle(GetEntityByIdQuery<MachineDetailDto> request, CancellationToken cancellationToken) Parameters request GetEntityByIdQuery<MachineDetailDto> The request cancellationToken CancellationToken Cancellation token Returns Task<MachineDetailDto> Response from the request"
  },
  "api/MaintenanceChronicle.Application.Machines.Queries.GetMachinesForLocationQueryHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Machines.Queries.GetMachinesForLocationQueryHandler.html",
    "title": "Class GetMachinesForLocationQueryHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class GetMachinesForLocationQueryHandler Namespace MaintenanceChronicle.Application.Machines.Queries Assembly MaintenanceChronicle.Application.dll public class GetMachinesForLocationQueryHandler : IRequestHandler<GetMachinesForLocationQuery, List<MachineInListForLocationDto>> Inheritance object GetMachinesForLocationQueryHandler Implements IRequestHandler<GetMachinesForLocationQuery, List<MachineInListForLocationDto>> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetMachinesForLocationQueryHandler(AppDbContext) public GetMachinesForLocationQueryHandler(AppDbContext dbContext) Parameters dbContext AppDbContext Methods Handle(GetMachinesForLocationQuery, CancellationToken) Handles a request public Task<List<MachineInListForLocationDto>> Handle(GetMachinesForLocationQuery request, CancellationToken cancellationToken) Parameters request GetMachinesForLocationQuery The request cancellationToken CancellationToken Cancellation token Returns Task<List<MachineInListForLocationDto>> Response from the request"
  },
  "api/MaintenanceChronicle.Application.Machines.Queries.html": {
    "href": "api/MaintenanceChronicle.Application.Machines.Queries.html",
    "title": "Namespace MaintenanceChronicle.Application.Machines.Queries | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Machines.Queries Classes GetListOfMachinesQueryHandler GetMachineByIdQueryHandler GetMachinesForLocationQueryHandler"
  },
  "api/MaintenanceChronicle.Application.RequestHandlerRegistrationHelper.html": {
    "href": "api/MaintenanceChronicle.Application.RequestHandlerRegistrationHelper.html",
    "title": "Class RequestHandlerRegistrationHelper | MaintenanceChronicleApiDocumantation",
    "keywords": "Class RequestHandlerRegistrationHelper Namespace MaintenanceChronicle.Application Assembly MaintenanceChronicle.Application.dll public class RequestHandlerRegistrationHelper Inheritance object RequestHandlerRegistrationHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/MaintenanceChronicle.Application.Roles.Queries.GetRoleByNameQueryHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Roles.Queries.GetRoleByNameQueryHandler.html",
    "title": "Class GetRoleByNameQueryHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class GetRoleByNameQueryHandler Namespace MaintenanceChronicle.Application.Roles.Queries Assembly MaintenanceChronicle.Application.dll public class GetRoleByNameQueryHandler : IRequestHandler<GetEntityByNameQuery<RoleDetailDto>, RoleDetailDto> Inheritance object GetRoleByNameQueryHandler Implements IRequestHandler<GetEntityByNameQuery<RoleDetailDto>, RoleDetailDto> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetRoleByNameQueryHandler(AppDbContext) public GetRoleByNameQueryHandler(AppDbContext dbContext) Parameters dbContext AppDbContext Methods Handle(GetEntityByNameQuery<RoleDetailDto>, CancellationToken) Handles a request public Task<RoleDetailDto> Handle(GetEntityByNameQuery<RoleDetailDto> request, CancellationToken cancellationToken) Parameters request GetEntityByNameQuery<RoleDetailDto> The request cancellationToken CancellationToken Cancellation token Returns Task<RoleDetailDto> Response from the request"
  },
  "api/MaintenanceChronicle.Application.Roles.Queries.html": {
    "href": "api/MaintenanceChronicle.Application.Roles.Queries.html",
    "title": "Namespace MaintenanceChronicle.Application.Roles.Queries | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Roles.Queries Classes GetRoleByNameQueryHandler"
  },
  "api/MaintenanceChronicle.Application.Tenants.Commands.AddTenantClaimToUserPrincipalCommandHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Tenants.Commands.AddTenantClaimToUserPrincipalCommandHandler.html",
    "title": "Class AddTenantClaimToUserPrincipalCommandHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class AddTenantClaimToUserPrincipalCommandHandler Namespace MaintenanceChronicle.Application.Tenants.Commands Assembly MaintenanceChronicle.Application.dll public class AddTenantClaimToUserPrincipalCommandHandler : IRequestHandler<AddTenantClaimToUserPrincipalCommand, ClaimsPrincipal> Inheritance object AddTenantClaimToUserPrincipalCommandHandler Implements IRequestHandler<AddTenantClaimToUserPrincipalCommand, ClaimsPrincipal> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AddTenantClaimToUserPrincipalCommandHandler(AppDbContext) public AddTenantClaimToUserPrincipalCommandHandler(AppDbContext dbContext) Parameters dbContext AppDbContext Methods Handle(AddTenantClaimToUserPrincipalCommand, CancellationToken) Handles a request public Task<ClaimsPrincipal> Handle(AddTenantClaimToUserPrincipalCommand request, CancellationToken cancellationToken) Parameters request AddTenantClaimToUserPrincipalCommand The request cancellationToken CancellationToken Cancellation token Returns Task<ClaimsPrincipal> Response from the request"
  },
  "api/MaintenanceChronicle.Application.Tenants.Commands.AssignCreationInfoToTenantCommandHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Tenants.Commands.AssignCreationInfoToTenantCommandHandler.html",
    "title": "Class AssignCreationInfoToTenantCommandHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class AssignCreationInfoToTenantCommandHandler Namespace MaintenanceChronicle.Application.Tenants.Commands Assembly MaintenanceChronicle.Application.dll public class AssignCreationInfoToTenantCommandHandler : IRequestHandler<AssignCreationInfoToTenantCommand> Inheritance object AssignCreationInfoToTenantCommandHandler Implements IRequestHandler<AssignCreationInfoToTenantCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AssignCreationInfoToTenantCommandHandler(AppDbContext, IClock) public AssignCreationInfoToTenantCommandHandler(AppDbContext dbContext, IClock clock) Parameters dbContext AppDbContext clock IClock Methods Handle(AssignCreationInfoToTenantCommand, CancellationToken) Handles a request public Task Handle(AssignCreationInfoToTenantCommand request, CancellationToken cancellationToken) Parameters request AssignCreationInfoToTenantCommand The request cancellationToken CancellationToken Cancellation token Returns Task Response from the request"
  },
  "api/MaintenanceChronicle.Application.Tenants.Commands.CreateNewTenantCommandHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Tenants.Commands.CreateNewTenantCommandHandler.html",
    "title": "Class CreateNewTenantCommandHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class CreateNewTenantCommandHandler Namespace MaintenanceChronicle.Application.Tenants.Commands Assembly MaintenanceChronicle.Application.dll public class CreateNewTenantCommandHandler : IRequestHandler<CreateNewTenantCommand, Guid> Inheritance object CreateNewTenantCommandHandler Implements IRequestHandler<CreateNewTenantCommand, Guid> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateNewTenantCommandHandler(AppDbContext, IClock) public CreateNewTenantCommandHandler(AppDbContext dbContext, IClock clock) Parameters dbContext AppDbContext clock IClock Methods Handle(CreateNewTenantCommand, CancellationToken) Handles a request public Task<Guid> Handle(CreateNewTenantCommand request, CancellationToken cancellationToken) Parameters request CreateNewTenantCommand The request cancellationToken CancellationToken Cancellation token Returns Task<Guid> Response from the request"
  },
  "api/MaintenanceChronicle.Application.Tenants.Commands.UpdateTenantCommandHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Tenants.Commands.UpdateTenantCommandHandler.html",
    "title": "Class UpdateTenantCommandHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class UpdateTenantCommandHandler Namespace MaintenanceChronicle.Application.Tenants.Commands Assembly MaintenanceChronicle.Application.dll public class UpdateTenantCommandHandler : IRequestHandler<UpdateTenantCommand> Inheritance object UpdateTenantCommandHandler Implements IRequestHandler<UpdateTenantCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateTenantCommandHandler(AppDbContext, IClock) public UpdateTenantCommandHandler(AppDbContext dbContext, IClock clock) Parameters dbContext AppDbContext clock IClock Methods Handle(UpdateTenantCommand, CancellationToken) Handles a request public Task Handle(UpdateTenantCommand request, CancellationToken cancellationToken) Parameters request UpdateTenantCommand The request cancellationToken CancellationToken Cancellation token Returns Task Response from the request"
  },
  "api/MaintenanceChronicle.Application.Tenants.Commands.html": {
    "href": "api/MaintenanceChronicle.Application.Tenants.Commands.html",
    "title": "Namespace MaintenanceChronicle.Application.Tenants.Commands | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Tenants.Commands Classes AddTenantClaimToUserPrincipalCommandHandler AssignCreationInfoToTenantCommandHandler CreateNewTenantCommandHandler UpdateTenantCommandHandler"
  },
  "api/MaintenanceChronicle.Application.Tenants.Queries.GetListOfTenantsQueryHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Tenants.Queries.GetListOfTenantsQueryHandler.html",
    "title": "Class GetListOfTenantsQueryHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class GetListOfTenantsQueryHandler Namespace MaintenanceChronicle.Application.Tenants.Queries Assembly MaintenanceChronicle.Application.dll public class GetListOfTenantsQueryHandler : IRequestHandler<GetListOfEntityQuery<TenantListDto>, List<TenantListDto>> Inheritance object GetListOfTenantsQueryHandler Implements IRequestHandler<GetListOfEntityQuery<TenantListDto>, List<TenantListDto>> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetListOfTenantsQueryHandler(AppDbContext) public GetListOfTenantsQueryHandler(AppDbContext dbContext) Parameters dbContext AppDbContext Methods Handle(GetListOfEntityQuery<TenantListDto>, CancellationToken) Handles a request public Task<List<TenantListDto>> Handle(GetListOfEntityQuery<TenantListDto> request, CancellationToken cancellationToken) Parameters request GetListOfEntityQuery<TenantListDto> The request cancellationToken CancellationToken Cancellation token Returns Task<List<TenantListDto>> Response from the request"
  },
  "api/MaintenanceChronicle.Application.Tenants.Queries.GetTenantByIdQueryHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Tenants.Queries.GetTenantByIdQueryHandler.html",
    "title": "Class GetTenantByIdQueryHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class GetTenantByIdQueryHandler Namespace MaintenanceChronicle.Application.Tenants.Queries Assembly MaintenanceChronicle.Application.dll public class GetTenantByIdQueryHandler : IRequestHandler<GetEntityByIdQuery<TenantDetailDto>, TenantDetailDto> Inheritance object GetTenantByIdQueryHandler Implements IRequestHandler<GetEntityByIdQuery<TenantDetailDto>, TenantDetailDto> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetTenantByIdQueryHandler(AppDbContext) public GetTenantByIdQueryHandler(AppDbContext dbContext) Parameters dbContext AppDbContext Methods Handle(GetEntityByIdQuery<TenantDetailDto>, CancellationToken) Handles a request public Task<TenantDetailDto> Handle(GetEntityByIdQuery<TenantDetailDto> request, CancellationToken cancellationToken) Parameters request GetEntityByIdQuery<TenantDetailDto> The request cancellationToken CancellationToken Cancellation token Returns Task<TenantDetailDto> Response from the request"
  },
  "api/MaintenanceChronicle.Application.Tenants.Queries.html": {
    "href": "api/MaintenanceChronicle.Application.Tenants.Queries.html",
    "title": "Namespace MaintenanceChronicle.Application.Tenants.Queries | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Tenants.Queries Classes GetListOfTenantsQueryHandler GetTenantByIdQueryHandler"
  },
  "api/MaintenanceChronicle.Application.UserTenant.Commands.RegisterUserAndTenantCommandHandler.html": {
    "href": "api/MaintenanceChronicle.Application.UserTenant.Commands.RegisterUserAndTenantCommandHandler.html",
    "title": "Class RegisterUserAndTenantCommandHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class RegisterUserAndTenantCommandHandler Namespace MaintenanceChronicle.Application.UserTenant.Commands Assembly MaintenanceChronicle.Application.dll public class RegisterUserAndTenantCommandHandler : IRequestHandler<RegisterUserAndTenantCommand, UserTenantIdsDto> Inheritance object RegisterUserAndTenantCommandHandler Implements IRequestHandler<RegisterUserAndTenantCommand, UserTenantIdsDto> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RegisterUserAndTenantCommandHandler(AppDbContext, IClock, UserManager<User>) public RegisterUserAndTenantCommandHandler(AppDbContext dbContext, IClock clock, UserManager<User> userManager) Parameters dbContext AppDbContext clock IClock userManager UserManager<User> Methods Handle(RegisterUserAndTenantCommand, CancellationToken) Handles a request public Task<UserTenantIdsDto> Handle(RegisterUserAndTenantCommand request, CancellationToken cancellationToken) Parameters request RegisterUserAndTenantCommand The request cancellationToken CancellationToken Cancellation token Returns Task<UserTenantIdsDto> Response from the request"
  },
  "api/MaintenanceChronicle.Application.UserTenant.Commands.html": {
    "href": "api/MaintenanceChronicle.Application.UserTenant.Commands.html",
    "title": "Namespace MaintenanceChronicle.Application.UserTenant.Commands | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.UserTenant.Commands Classes RegisterUserAndTenantCommandHandler"
  },
  "api/MaintenanceChronicle.Application.Users.Commands.AddPasswordToRegisteredUserCommandHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Users.Commands.AddPasswordToRegisteredUserCommandHandler.html",
    "title": "Class AddPasswordToRegisteredUserCommandHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class AddPasswordToRegisteredUserCommandHandler Namespace MaintenanceChronicle.Application.Users.Commands Assembly MaintenanceChronicle.Application.dll public class AddPasswordToRegisteredUserCommandHandler : IRequestHandler<AddPasswordToRegisteredUserCommand> Inheritance object AddPasswordToRegisteredUserCommandHandler Implements IRequestHandler<AddPasswordToRegisteredUserCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AddPasswordToRegisteredUserCommandHandler(UserManager<User>) public AddPasswordToRegisteredUserCommandHandler(UserManager<User> userManager) Parameters userManager UserManager<User> Methods Handle(AddPasswordToRegisteredUserCommand, CancellationToken) Handles a request public Task Handle(AddPasswordToRegisteredUserCommand request, CancellationToken cancellationToken) Parameters request AddPasswordToRegisteredUserCommand The request cancellationToken CancellationToken Cancellation token Returns Task Response from the request"
  },
  "api/MaintenanceChronicle.Application.Users.Commands.AddRolesToUserCommandHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Users.Commands.AddRolesToUserCommandHandler.html",
    "title": "Class AddRolesToUserCommandHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class AddRolesToUserCommandHandler Namespace MaintenanceChronicle.Application.Users.Commands Assembly MaintenanceChronicle.Application.dll public class AddRolesToUserCommandHandler : IRequestHandler<AddRolesToUserCommand> Inheritance object AddRolesToUserCommandHandler Implements IRequestHandler<AddRolesToUserCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AddRolesToUserCommandHandler(AppDbContext, IClock, UserManager<User>) public AddRolesToUserCommandHandler(AppDbContext dbContext, IClock clock, UserManager<User> userManager) Parameters dbContext AppDbContext clock IClock userManager UserManager<User> Methods Handle(AddRolesToUserCommand, CancellationToken) Handles a request public Task Handle(AddRolesToUserCommand request, CancellationToken cancellationToken) Parameters request AddRolesToUserCommand The request cancellationToken CancellationToken Cancellation token Returns Task Response from the request"
  },
  "api/MaintenanceChronicle.Application.Users.Commands.CreateNewUserCommandHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Users.Commands.CreateNewUserCommandHandler.html",
    "title": "Class CreateNewUserCommandHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class CreateNewUserCommandHandler Namespace MaintenanceChronicle.Application.Users.Commands Assembly MaintenanceChronicle.Application.dll public class CreateNewUserCommandHandler : IRequestHandler<CreateNewUserCommand, Guid> Inheritance object CreateNewUserCommandHandler Implements IRequestHandler<CreateNewUserCommand, Guid> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CreateNewUserCommandHandler(UserManager<User>, AppDbContext, IClock) public CreateNewUserCommandHandler(UserManager<User> userManager, AppDbContext dbContext, IClock clock) Parameters userManager UserManager<User> dbContext AppDbContext clock IClock Methods Handle(CreateNewUserCommand, CancellationToken) Handles a request public Task<Guid> Handle(CreateNewUserCommand request, CancellationToken cancellationToken) Parameters request CreateNewUserCommand The request cancellationToken CancellationToken Cancellation token Returns Task<Guid> Response from the request"
  },
  "api/MaintenanceChronicle.Application.Users.Commands.GenerateClaimsPrincipalForUserCommandHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Users.Commands.GenerateClaimsPrincipalForUserCommandHandler.html",
    "title": "Class GenerateClaimsPrincipalForUserCommandHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class GenerateClaimsPrincipalForUserCommandHandler Namespace MaintenanceChronicle.Application.Users.Commands Assembly MaintenanceChronicle.Application.dll public class GenerateClaimsPrincipalForUserCommandHandler : IRequestHandler<GenerateClaimsPrincipalForUserCommand, ClaimsPrincipal> Inheritance object GenerateClaimsPrincipalForUserCommandHandler Implements IRequestHandler<GenerateClaimsPrincipalForUserCommand, ClaimsPrincipal> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GenerateClaimsPrincipalForUserCommandHandler(UserManager<User>, SignInManager<User>) public GenerateClaimsPrincipalForUserCommandHandler(UserManager<User> userManager, SignInManager<User> signInManager) Parameters userManager UserManager<User> signInManager SignInManager<User> Methods Handle(GenerateClaimsPrincipalForUserCommand, CancellationToken) Handles a request public Task<ClaimsPrincipal> Handle(GenerateClaimsPrincipalForUserCommand request, CancellationToken cancellationToken) Parameters request GenerateClaimsPrincipalForUserCommand The request cancellationToken CancellationToken Cancellation token Returns Task<ClaimsPrincipal> Response from the request"
  },
  "api/MaintenanceChronicle.Application.Users.Commands.GenerateEmailConfirmationTokenForUserCommandHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Users.Commands.GenerateEmailConfirmationTokenForUserCommandHandler.html",
    "title": "Class GenerateEmailConfirmationTokenForUserCommandHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class GenerateEmailConfirmationTokenForUserCommandHandler Namespace MaintenanceChronicle.Application.Users.Commands Assembly MaintenanceChronicle.Application.dll public class GenerateEmailConfirmationTokenForUserCommandHandler : IRequestHandler<GenerateEmailConfirmationTokenForUserCommand, string> Inheritance object GenerateEmailConfirmationTokenForUserCommandHandler Implements IRequestHandler<GenerateEmailConfirmationTokenForUserCommand, string> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GenerateEmailConfirmationTokenForUserCommandHandler(UserManager<User>) public GenerateEmailConfirmationTokenForUserCommandHandler(UserManager<User> userManager) Parameters userManager UserManager<User> Methods Handle(GenerateEmailConfirmationTokenForUserCommand, CancellationToken) Handles a request public Task<string> Handle(GenerateEmailConfirmationTokenForUserCommand request, CancellationToken cancellationToken) Parameters request GenerateEmailConfirmationTokenForUserCommand The request cancellationToken CancellationToken Cancellation token Returns Task<string> Response from the request"
  },
  "api/MaintenanceChronicle.Application.Users.Commands.RegisterNewUserCommandHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Users.Commands.RegisterNewUserCommandHandler.html",
    "title": "Class RegisterNewUserCommandHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class RegisterNewUserCommandHandler Namespace MaintenanceChronicle.Application.Users.Commands Assembly MaintenanceChronicle.Application.dll public class RegisterNewUserCommandHandler : IRequestHandler<RegisterNewUserCommand, Guid> Inheritance object RegisterNewUserCommandHandler Implements IRequestHandler<RegisterNewUserCommand, Guid> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors RegisterNewUserCommandHandler(UserManager<User>, AppDbContext, IClock) public RegisterNewUserCommandHandler(UserManager<User> userManager, AppDbContext dbContext, IClock clock) Parameters userManager UserManager<User> dbContext AppDbContext clock IClock Methods Handle(RegisterNewUserCommand, CancellationToken) Handles a request public Task<Guid> Handle(RegisterNewUserCommand request, CancellationToken cancellationToken) Parameters request RegisterNewUserCommand The request cancellationToken CancellationToken Cancellation token Returns Task<Guid> Response from the request"
  },
  "api/MaintenanceChronicle.Application.Users.Commands.UpdateUserCommandHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Users.Commands.UpdateUserCommandHandler.html",
    "title": "Class UpdateUserCommandHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class UpdateUserCommandHandler Namespace MaintenanceChronicle.Application.Users.Commands Assembly MaintenanceChronicle.Application.dll public class UpdateUserCommandHandler : IRequestHandler<UpdateUserCommand> Inheritance object UpdateUserCommandHandler Implements IRequestHandler<UpdateUserCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UpdateUserCommandHandler(AppDbContext, IClock) public UpdateUserCommandHandler(AppDbContext dbContext, IClock clock) Parameters dbContext AppDbContext clock IClock Methods Handle(UpdateUserCommand, CancellationToken) Handles a request public Task Handle(UpdateUserCommand request, CancellationToken cancellationToken) Parameters request UpdateUserCommand The request cancellationToken CancellationToken Cancellation token Returns Task Response from the request"
  },
  "api/MaintenanceChronicle.Application.Users.Commands.ValidateEmailConfirmationTokenCommandHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Users.Commands.ValidateEmailConfirmationTokenCommandHandler.html",
    "title": "Class ValidateEmailConfirmationTokenCommandHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class ValidateEmailConfirmationTokenCommandHandler Namespace MaintenanceChronicle.Application.Users.Commands Assembly MaintenanceChronicle.Application.dll public class ValidateEmailConfirmationTokenCommandHandler : IRequestHandler<ValidateEmailConfirmationTokenCommand> Inheritance object ValidateEmailConfirmationTokenCommandHandler Implements IRequestHandler<ValidateEmailConfirmationTokenCommand> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ValidateEmailConfirmationTokenCommandHandler(UserManager<User>) public ValidateEmailConfirmationTokenCommandHandler(UserManager<User> userManager) Parameters userManager UserManager<User> Methods Handle(ValidateEmailConfirmationTokenCommand, CancellationToken) Handles a request public Task Handle(ValidateEmailConfirmationTokenCommand request, CancellationToken cancellationToken) Parameters request ValidateEmailConfirmationTokenCommand The request cancellationToken CancellationToken Cancellation token Returns Task Response from the request"
  },
  "api/MaintenanceChronicle.Application.Users.Commands.html": {
    "href": "api/MaintenanceChronicle.Application.Users.Commands.html",
    "title": "Namespace MaintenanceChronicle.Application.Users.Commands | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Users.Commands Classes AddPasswordToRegisteredUserCommandHandler AddRolesToUserCommandHandler CreateNewUserCommandHandler GenerateClaimsPrincipalForUserCommandHandler GenerateEmailConfirmationTokenForUserCommandHandler RegisterNewUserCommandHandler UpdateUserCommandHandler ValidateEmailConfirmationTokenCommandHandler"
  },
  "api/MaintenanceChronicle.Application.Users.Queries.GetListOfUsersQueryHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Users.Queries.GetListOfUsersQueryHandler.html",
    "title": "Class GetListOfUsersQueryHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class GetListOfUsersQueryHandler Namespace MaintenanceChronicle.Application.Users.Queries Assembly MaintenanceChronicle.Application.dll public class GetListOfUsersQueryHandler : IRequestHandler<GetListOfEntityQuery<UserListDto>, List<UserListDto>> Inheritance object GetListOfUsersQueryHandler Implements IRequestHandler<GetListOfEntityQuery<UserListDto>, List<UserListDto>> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetListOfUsersQueryHandler(UserManager<User>) public GetListOfUsersQueryHandler(UserManager<User> userManager) Parameters userManager UserManager<User> Methods Handle(GetListOfEntityQuery<UserListDto>, CancellationToken) Handles a request public Task<List<UserListDto>> Handle(GetListOfEntityQuery<UserListDto> request, CancellationToken cancellationToken) Parameters request GetListOfEntityQuery<UserListDto> The request cancellationToken CancellationToken Cancellation token Returns Task<List<UserListDto>> Response from the request"
  },
  "api/MaintenanceChronicle.Application.Users.Queries.GetTenantIdFromUserCommandHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Users.Queries.GetTenantIdFromUserCommandHandler.html",
    "title": "Class GetTenantIdFromUserCommandHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class GetTenantIdFromUserCommandHandler Namespace MaintenanceChronicle.Application.Users.Queries Assembly MaintenanceChronicle.Application.dll public class GetTenantIdFromUserCommandHandler : IRequestHandler<GetTenantIdFromUserCommand, Guid> Inheritance object GetTenantIdFromUserCommandHandler Implements IRequestHandler<GetTenantIdFromUserCommand, Guid> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetTenantIdFromUserCommandHandler(AppDbContext) public GetTenantIdFromUserCommandHandler(AppDbContext dbContext) Parameters dbContext AppDbContext Methods Handle(GetTenantIdFromUserCommand, CancellationToken) Handles a request public Task<Guid> Handle(GetTenantIdFromUserCommand request, CancellationToken cancellationToken) Parameters request GetTenantIdFromUserCommand The request cancellationToken CancellationToken Cancellation token Returns Task<Guid> Response from the request"
  },
  "api/MaintenanceChronicle.Application.Users.Queries.GetUserByIdQueryHandler.html": {
    "href": "api/MaintenanceChronicle.Application.Users.Queries.GetUserByIdQueryHandler.html",
    "title": "Class GetUserByIdQueryHandler | MaintenanceChronicleApiDocumantation",
    "keywords": "Class GetUserByIdQueryHandler Namespace MaintenanceChronicle.Application.Users.Queries Assembly MaintenanceChronicle.Application.dll public class GetUserByIdQueryHandler : IRequestHandler<GetEntityByIdQuery<UserDetailDto>, UserDetailDto> Inheritance object GetUserByIdQueryHandler Implements IRequestHandler<GetEntityByIdQuery<UserDetailDto>, UserDetailDto> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GetUserByIdQueryHandler(UserManager<User>) public GetUserByIdQueryHandler(UserManager<User> userManager) Parameters userManager UserManager<User> Methods Handle(GetEntityByIdQuery<UserDetailDto>, CancellationToken) Handles a request public Task<UserDetailDto> Handle(GetEntityByIdQuery<UserDetailDto> request, CancellationToken cancellationToken) Parameters request GetEntityByIdQuery<UserDetailDto> The request cancellationToken CancellationToken Cancellation token Returns Task<UserDetailDto> Response from the request"
  },
  "api/MaintenanceChronicle.Application.Users.Queries.html": {
    "href": "api/MaintenanceChronicle.Application.Users.Queries.html",
    "title": "Namespace MaintenanceChronicle.Application.Users.Queries | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Users.Queries Classes GetListOfUsersQueryHandler GetTenantIdFromUserCommandHandler GetUserByIdQueryHandler"
  },
  "api/MaintenanceChronicle.Application.Validators.UserTenantValidationMiddleware.html": {
    "href": "api/MaintenanceChronicle.Application.Validators.UserTenantValidationMiddleware.html",
    "title": "Class UserTenantValidationMiddleware | MaintenanceChronicleApiDocumantation",
    "keywords": "Class UserTenantValidationMiddleware Namespace MaintenanceChronicle.Application.Validators Assembly MaintenanceChronicle.Application.dll public class UserTenantValidationMiddleware : IMiddleware Inheritance object UserTenantValidationMiddleware Implements IMiddleware Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UserTenantValidationMiddleware(AppDbContext) public UserTenantValidationMiddleware(AppDbContext dbContext) Parameters dbContext AppDbContext Methods InvokeAsync(HttpContext, RequestDelegate) Request handling method. public Task InvokeAsync(HttpContext context, RequestDelegate next) Parameters context HttpContext The HttpContext for the current request. next RequestDelegate The delegate representing the remaining middleware in the request pipeline. Returns Task A Task that represents the execution of this middleware."
  },
  "api/MaintenanceChronicle.Application.Validators.UserTenantValidator.html": {
    "href": "api/MaintenanceChronicle.Application.Validators.UserTenantValidator.html",
    "title": "Class UserTenantValidator | MaintenanceChronicleApiDocumantation",
    "keywords": "Class UserTenantValidator Namespace MaintenanceChronicle.Application.Validators Assembly MaintenanceChronicle.Application.dll public static class UserTenantValidator Inheritance object UserTenantValidator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ValidateUserTenantAccess(AppDbContext, string, string) Validates if user and tenant exist, and if user has access to tenant public static Task<bool> ValidateUserTenantAccess(this AppDbContext dbContext, string userId, string tenantId) Parameters dbContext AppDbContext userId string tenantId string Returns Task<bool>"
  },
  "api/MaintenanceChronicle.Application.Validators.html": {
    "href": "api/MaintenanceChronicle.Application.Validators.html",
    "title": "Namespace MaintenanceChronicle.Application.Validators | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application.Validators Classes UserTenantValidationMiddleware UserTenantValidator"
  },
  "api/MaintenanceChronicle.Application.html": {
    "href": "api/MaintenanceChronicle.Application.html",
    "title": "Namespace MaintenanceChronicle.Application | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Application Classes RequestHandlerRegistrationHelper"
  },
  "api/MaintenanceChronicle.Data.AppDbContext.html": {
    "href": "api/MaintenanceChronicle.Data.AppDbContext.html",
    "title": "Class AppDbContext | MaintenanceChronicleApiDocumantation",
    "keywords": "Class AppDbContext Namespace MaintenanceChronicle.Data Assembly MaintenanceChronicle.Data.dll public class AppDbContext : IdentityDbContext<User, Role, Guid, IdentityUserClaim<Guid>, UserRole, IdentityUserLogin<Guid>, IdentityRoleClaim<Guid>, IdentityUserToken<Guid>>, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext IdentityUserContext<User, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>> IdentityDbContext<User, Role, Guid, IdentityUserClaim<Guid>, UserRole, IdentityUserLogin<Guid>, IdentityRoleClaim<Guid>, IdentityUserToken<Guid>> AppDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members IdentityDbContext<User, Role, Guid, IdentityUserClaim<Guid>, UserRole, IdentityUserLogin<Guid>, IdentityRoleClaim<Guid>, IdentityUserToken<Guid>>.OnModelCreating(ModelBuilder) IdentityDbContext<User, Role, Guid, IdentityUserClaim<Guid>, UserRole, IdentityUserLogin<Guid>, IdentityRoleClaim<Guid>, IdentityUserToken<Guid>>.UserRoles IdentityDbContext<User, Role, Guid, IdentityUserClaim<Guid>, UserRole, IdentityUserLogin<Guid>, IdentityRoleClaim<Guid>, IdentityUserToken<Guid>>.Roles IdentityDbContext<User, Role, Guid, IdentityUserClaim<Guid>, UserRole, IdentityUserLogin<Guid>, IdentityRoleClaim<Guid>, IdentityUserToken<Guid>>.RoleClaims IdentityUserContext<User, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>>.OnModelCreating(ModelBuilder) IdentityUserContext<User, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>>.Users IdentityUserContext<User, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>>.UserClaims IdentityUserContext<User, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>>.UserLogins IdentityUserContext<User, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>>.UserTokens IdentityUserContext<User, Guid, IdentityUserClaim<Guid>, IdentityUserLogin<Guid>, IdentityUserToken<Guid>>.SchemaVersion DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppDbContext(DbContextOptions<AppDbContext>, ICurrentTenantProvider) public AppDbContext(DbContextOptions<AppDbContext> options, ICurrentTenantProvider currentTenantProvider) Parameters options DbContextOptions<AppDbContext> currentTenantProvider ICurrentTenantProvider Properties Customers public DbSet<Customer> Customers { get; set; } Property Value DbSet<Customer> LocationContactUsers public DbSet<LocationContactUser> LocationContactUsers { get; set; } Property Value DbSet<LocationContactUser> Locations public DbSet<Location> Locations { get; set; } Property Value DbSet<Location> Machines public DbSet<Machine> Machines { get; set; } Property Value DbSet<Machine> Tenants public DbSet<Tenant> Tenants { get; set; } Property Value DbSet<Tenant> Methods OnModelCreating(ModelBuilder) Configures the schema needed for the identity framework. protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder"
  },
  "api/MaintenanceChronicle.Data.Entities.Account.Role.html": {
    "href": "api/MaintenanceChronicle.Data.Entities.Account.Role.html",
    "title": "Class Role | MaintenanceChronicleApiDocumantation",
    "keywords": "Class Role Namespace MaintenanceChronicle.Data.Entities.Account Assembly MaintenanceChronicle.Data.dll [Table(\"Role\")] public class Role : IdentityRole<Guid> Inheritance object IdentityRole<Guid> Role Inherited Members IdentityRole<Guid>.ToString() IdentityRole<Guid>.Id IdentityRole<Guid>.Name IdentityRole<Guid>.NormalizedName IdentityRole<Guid>.ConcurrencyStamp object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Users public ICollection<UserRole> Users { get; set; } Property Value ICollection<UserRole>"
  },
  "api/MaintenanceChronicle.Data.Entities.Account.Tenant.html": {
    "href": "api/MaintenanceChronicle.Data.Entities.Account.Tenant.html",
    "title": "Class Tenant | MaintenanceChronicleApiDocumantation",
    "keywords": "Class Tenant Namespace MaintenanceChronicle.Data.Entities.Account Assembly MaintenanceChronicle.Data.dll [Table(\"Tenant\")] public class Tenant : ITrackable Inheritance object Tenant Implements ITrackable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods TrackableExtensions.SetCreateBySystem<T>(T, Instant) TrackableExtensions.SetCreateBy<T>(T, string, Instant) TrackableExtensions.SetDeleteBySystem<T>(T, Instant) TrackableExtensions.SetDeleteBy<T>(T, string, Instant) TrackableExtensions.SetModifyBySystem<T>(T, Instant) TrackableExtensions.SetModifyBy<T>(T, string, Instant) Properties CreatedAt public Instant CreatedAt { get; set; } Property Value Instant CreatedBy public string CreatedBy { get; set; } Property Value string DeletedAt public Instant? DeletedAt { get; set; } Property Value Instant? DeletedBy public string? DeletedBy { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid ModifiedAt public Instant ModifiedAt { get; set; } Property Value Instant ModifiedBy public string ModifiedBy { get; set; } Property Value string Name public required string Name { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Data.Entities.Account.User.html": {
    "href": "api/MaintenanceChronicle.Data.Entities.Account.User.html",
    "title": "Class User | MaintenanceChronicleApiDocumantation",
    "keywords": "Class User Namespace MaintenanceChronicle.Data.Entities.Account Assembly MaintenanceChronicle.Data.dll [Table(\"User\")] public class User : IdentityUser<Guid>, ITenant, ITrackable Inheritance object IdentityUser<Guid> User Implements ITenant ITrackable Inherited Members IdentityUser<Guid>.ToString() IdentityUser<Guid>.Id IdentityUser<Guid>.UserName IdentityUser<Guid>.NormalizedUserName IdentityUser<Guid>.Email IdentityUser<Guid>.NormalizedEmail IdentityUser<Guid>.EmailConfirmed IdentityUser<Guid>.PasswordHash IdentityUser<Guid>.SecurityStamp IdentityUser<Guid>.ConcurrencyStamp IdentityUser<Guid>.PhoneNumber IdentityUser<Guid>.PhoneNumberConfirmed IdentityUser<Guid>.TwoFactorEnabled IdentityUser<Guid>.LockoutEnd IdentityUser<Guid>.LockoutEnabled IdentityUser<Guid>.AccessFailedCount object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods TrackableExtensions.SetCreateBySystem<T>(T, Instant) TrackableExtensions.SetCreateBy<T>(T, string, Instant) TrackableExtensions.SetDeleteBySystem<T>(T, Instant) TrackableExtensions.SetDeleteBy<T>(T, string, Instant) TrackableExtensions.SetModifyBySystem<T>(T, Instant) TrackableExtensions.SetModifyBy<T>(T, string, Instant) Properties CreatedAt public Instant CreatedAt { get; set; } Property Value Instant CreatedBy public string CreatedBy { get; set; } Property Value string DeletedAt public Instant? DeletedAt { get; set; } Property Value Instant? DeletedBy public string? DeletedBy { get; set; } Property Value string FirstName public required string FirstName { get; set; } Property Value string LastName public required string LastName { get; set; } Property Value string Locations public ICollection<LocationContactUser> Locations { get; set; } Property Value ICollection<LocationContactUser> ModifiedAt public Instant ModifiedAt { get; set; } Property Value Instant ModifiedBy public string ModifiedBy { get; set; } Property Value string Roles public ICollection<UserRole> Roles { get; set; } Property Value ICollection<UserRole> Tenant public Tenant Tenant { get; set; } Property Value Tenant TenantId public Guid TenantId { get; set; } Property Value Guid"
  },
  "api/MaintenanceChronicle.Data.Entities.Account.UserRole.html": {
    "href": "api/MaintenanceChronicle.Data.Entities.Account.UserRole.html",
    "title": "Class UserRole | MaintenanceChronicleApiDocumantation",
    "keywords": "Class UserRole Namespace MaintenanceChronicle.Data.Entities.Account Assembly MaintenanceChronicle.Data.dll [Table(\"UserRole\")] public class UserRole : IdentityUserRole<Guid>, ITenant, ITrackable Inheritance object IdentityUserRole<Guid> UserRole Implements ITenant ITrackable Inherited Members IdentityUserRole<Guid>.UserId IdentityUserRole<Guid>.RoleId object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods TrackableExtensions.SetCreateBySystem<T>(T, Instant) TrackableExtensions.SetCreateBy<T>(T, string, Instant) TrackableExtensions.SetDeleteBySystem<T>(T, Instant) TrackableExtensions.SetDeleteBy<T>(T, string, Instant) TrackableExtensions.SetModifyBySystem<T>(T, Instant) TrackableExtensions.SetModifyBy<T>(T, string, Instant) Properties CreatedAt public Instant CreatedAt { get; set; } Property Value Instant CreatedBy public string CreatedBy { get; set; } Property Value string DeletedAt public Instant? DeletedAt { get; set; } Property Value Instant? DeletedBy public string? DeletedBy { get; set; } Property Value string ModifiedAt public Instant ModifiedAt { get; set; } Property Value Instant ModifiedBy public string ModifiedBy { get; set; } Property Value string Role public Role Role { get; set; } Property Value Role Tenant public Tenant Tenant { get; set; } Property Value Tenant TenantId public Guid TenantId { get; set; } Property Value Guid User public User User { get; set; } Property Value User"
  },
  "api/MaintenanceChronicle.Data.Entities.Account.html": {
    "href": "api/MaintenanceChronicle.Data.Entities.Account.html",
    "title": "Namespace MaintenanceChronicle.Data.Entities.Account | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Data.Entities.Account Classes Role Tenant User UserRole"
  },
  "api/MaintenanceChronicle.Data.Entities.Business.Customer.html": {
    "href": "api/MaintenanceChronicle.Data.Entities.Business.Customer.html",
    "title": "Class Customer | MaintenanceChronicleApiDocumantation",
    "keywords": "Class Customer Namespace MaintenanceChronicle.Data.Entities.Business Assembly MaintenanceChronicle.Data.dll [Table(\"Customer\")] public class Customer : ITrackable, ITenant Inheritance object Customer Implements ITrackable ITenant Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods TrackableExtensions.SetCreateBySystem<T>(T, Instant) TrackableExtensions.SetCreateBy<T>(T, string, Instant) TrackableExtensions.SetDeleteBySystem<T>(T, Instant) TrackableExtensions.SetDeleteBy<T>(T, string, Instant) TrackableExtensions.SetModifyBySystem<T>(T, Instant) TrackableExtensions.SetModifyBy<T>(T, string, Instant) Properties CreatedAt public Instant CreatedAt { get; set; } Property Value Instant CreatedBy public string CreatedBy { get; set; } Property Value string DeletedAt public Instant? DeletedAt { get; set; } Property Value Instant? DeletedBy public string? DeletedBy { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid Locations public ICollection<Location> Locations { get; set; } Property Value ICollection<Location> ModifiedAt public Instant ModifiedAt { get; set; } Property Value Instant ModifiedBy public string ModifiedBy { get; set; } Property Value string Name public string Name { get; set; } Property Value string Tenant public Tenant Tenant { get; set; } Property Value Tenant TenantId public Guid TenantId { get; set; } Property Value Guid"
  },
  "api/MaintenanceChronicle.Data.Entities.Business.Location.html": {
    "href": "api/MaintenanceChronicle.Data.Entities.Business.Location.html",
    "title": "Class Location | MaintenanceChronicleApiDocumantation",
    "keywords": "Class Location Namespace MaintenanceChronicle.Data.Entities.Business Assembly MaintenanceChronicle.Data.dll [Table(\"Location\")] public class Location : ITrackable, ITenant Inheritance object Location Implements ITrackable ITenant Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods TrackableExtensions.SetCreateBySystem<T>(T, Instant) TrackableExtensions.SetCreateBy<T>(T, string, Instant) TrackableExtensions.SetDeleteBySystem<T>(T, Instant) TrackableExtensions.SetDeleteBy<T>(T, string, Instant) TrackableExtensions.SetModifyBySystem<T>(T, Instant) TrackableExtensions.SetModifyBy<T>(T, string, Instant) Properties City public string City { get; set; } Property Value string Contacts public ICollection<LocationContactUser> Contacts { get; set; } Property Value ICollection<LocationContactUser> Country public string Country { get; set; } Property Value string CreatedAt public Instant CreatedAt { get; set; } Property Value Instant CreatedBy public string CreatedBy { get; set; } Property Value string Customer public Customer Customer { get; set; } Property Value Customer CustomerId public Guid CustomerId { get; set; } Property Value Guid DeletedAt public Instant? DeletedAt { get; set; } Property Value Instant? DeletedBy public string? DeletedBy { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid Machines public ICollection<Machine> Machines { get; set; } Property Value ICollection<Machine> ModifiedAt public Instant ModifiedAt { get; set; } Property Value Instant ModifiedBy public string ModifiedBy { get; set; } Property Value string Name public string Name { get; set; } Property Value string Street public string Street { get; set; } Property Value string Tenant public Tenant Tenant { get; set; } Property Value Tenant TenantId public Guid TenantId { get; set; } Property Value Guid"
  },
  "api/MaintenanceChronicle.Data.Entities.Business.LocationContactUser.html": {
    "href": "api/MaintenanceChronicle.Data.Entities.Business.LocationContactUser.html",
    "title": "Class LocationContactUser | MaintenanceChronicleApiDocumantation",
    "keywords": "Class LocationContactUser Namespace MaintenanceChronicle.Data.Entities.Business Assembly MaintenanceChronicle.Data.dll [Table(\"LocationContactUser\")] public class LocationContactUser : ITrackable, ITenant Inheritance object LocationContactUser Implements ITrackable ITenant Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods TrackableExtensions.SetCreateBySystem<T>(T, Instant) TrackableExtensions.SetCreateBy<T>(T, string, Instant) TrackableExtensions.SetDeleteBySystem<T>(T, Instant) TrackableExtensions.SetDeleteBy<T>(T, string, Instant) TrackableExtensions.SetModifyBySystem<T>(T, Instant) TrackableExtensions.SetModifyBy<T>(T, string, Instant) Properties CreatedAt public Instant CreatedAt { get; set; } Property Value Instant CreatedBy public string CreatedBy { get; set; } Property Value string DeletedAt public Instant? DeletedAt { get; set; } Property Value Instant? DeletedBy public string? DeletedBy { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid Location public Location Location { get; set; } Property Value Location LocationId public Guid LocationId { get; set; } Property Value Guid ModifiedAt public Instant ModifiedAt { get; set; } Property Value Instant ModifiedBy public string ModifiedBy { get; set; } Property Value string Tenant public Tenant Tenant { get; set; } Property Value Tenant TenantId public Guid TenantId { get; set; } Property Value Guid User public User User { get; set; } Property Value User UserId public Guid UserId { get; set; } Property Value Guid"
  },
  "api/MaintenanceChronicle.Data.Entities.Business.Machine.html": {
    "href": "api/MaintenanceChronicle.Data.Entities.Business.Machine.html",
    "title": "Class Machine | MaintenanceChronicleApiDocumantation",
    "keywords": "Class Machine Namespace MaintenanceChronicle.Data.Entities.Business Assembly MaintenanceChronicle.Data.dll [Table(\"Machine\")] public class Machine : ITrackable, ITenant Inheritance object Machine Implements ITrackable ITenant Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods TrackableExtensions.SetCreateBySystem<T>(T, Instant) TrackableExtensions.SetCreateBy<T>(T, string, Instant) TrackableExtensions.SetDeleteBySystem<T>(T, Instant) TrackableExtensions.SetDeleteBy<T>(T, string, Instant) TrackableExtensions.SetModifyBySystem<T>(T, Instant) TrackableExtensions.SetModifyBy<T>(T, string, Instant) Properties Color public string Color { get; set; } Property Value string CreatedAt public Instant CreatedAt { get; set; } Property Value Instant CreatedBy public string CreatedBy { get; set; } Property Value string DeletedAt public Instant? DeletedAt { get; set; } Property Value Instant? DeletedBy public string? DeletedBy { get; set; } Property Value string Id public Guid Id { get; set; } Property Value Guid InUseSince public Instant InUseSince { get; set; } Property Value Instant Location public Location Location { get; set; } Property Value Location LocationId public Guid LocationId { get; set; } Property Value Guid Manufacture public string Manufacture { get; set; } Property Value string Model public string Model { get; set; } Property Value string ModifiedAt public Instant ModifiedAt { get; set; } Property Value Instant ModifiedBy public string ModifiedBy { get; set; } Property Value string SerialNumber public string SerialNumber { get; set; } Property Value string Tenant public Tenant Tenant { get; set; } Property Value Tenant TenantId public Guid TenantId { get; set; } Property Value Guid"
  },
  "api/MaintenanceChronicle.Data.Entities.Business.html": {
    "href": "api/MaintenanceChronicle.Data.Entities.Business.html",
    "title": "Namespace MaintenanceChronicle.Data.Entities.Business | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Data.Entities.Business Classes Customer Location LocationContactUser Machine"
  },
  "api/MaintenanceChronicle.Data.Interfaces.ITenant.html": {
    "href": "api/MaintenanceChronicle.Data.Interfaces.ITenant.html",
    "title": "Interface ITenant | MaintenanceChronicleApiDocumantation",
    "keywords": "Interface ITenant Namespace MaintenanceChronicle.Data.Interfaces Assembly MaintenanceChronicle.Data.dll public interface ITenant Properties Tenant Tenant Tenant { get; set; } Property Value Tenant TenantId Guid TenantId { get; set; } Property Value Guid"
  },
  "api/MaintenanceChronicle.Data.Interfaces.ITrackable.html": {
    "href": "api/MaintenanceChronicle.Data.Interfaces.ITrackable.html",
    "title": "Interface ITrackable | MaintenanceChronicleApiDocumantation",
    "keywords": "Interface ITrackable Namespace MaintenanceChronicle.Data.Interfaces Assembly MaintenanceChronicle.Data.dll public interface ITrackable Extension Methods TrackableExtensions.SetCreateBySystem<T>(T, Instant) TrackableExtensions.SetCreateBy<T>(T, string, Instant) TrackableExtensions.SetDeleteBySystem<T>(T, Instant) TrackableExtensions.SetDeleteBy<T>(T, string, Instant) TrackableExtensions.SetModifyBySystem<T>(T, Instant) TrackableExtensions.SetModifyBy<T>(T, string, Instant) Properties CreatedAt Instant CreatedAt { get; set; } Property Value Instant CreatedBy string CreatedBy { get; set; } Property Value string DeletedAt Instant? DeletedAt { get; set; } Property Value Instant? DeletedBy string? DeletedBy { get; set; } Property Value string ModifiedAt Instant ModifiedAt { get; set; } Property Value Instant ModifiedBy string ModifiedBy { get; set; } Property Value string"
  },
  "api/MaintenanceChronicle.Data.Interfaces.TrackableExtensions.html": {
    "href": "api/MaintenanceChronicle.Data.Interfaces.TrackableExtensions.html",
    "title": "Class TrackableExtensions | MaintenanceChronicleApiDocumantation",
    "keywords": "Class TrackableExtensions Namespace MaintenanceChronicle.Data.Interfaces Assembly MaintenanceChronicle.Data.dll public static class TrackableExtensions Inheritance object TrackableExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SetCreateBySystem<T>(T, Instant) public static T SetCreateBySystem<T>(this T trackable, Instant now) where T : class, ITrackable Parameters trackable T now Instant Returns T Type Parameters T SetCreateBy<T>(T, string, Instant) public static T SetCreateBy<T>(this T trackable, string author, Instant now) where T : class, ITrackable Parameters trackable T author string now Instant Returns T Type Parameters T SetDeleteBySystem<T>(T, Instant) public static T SetDeleteBySystem<T>(this T trackable, Instant now) where T : class, ITrackable Parameters trackable T now Instant Returns T Type Parameters T SetDeleteBy<T>(T, string, Instant) public static T SetDeleteBy<T>(this T trackable, string author, Instant now) where T : class, ITrackable Parameters trackable T author string now Instant Returns T Type Parameters T SetModifyBySystem<T>(T, Instant) public static T SetModifyBySystem<T>(this T trackable, Instant now) where T : class, ITrackable Parameters trackable T now Instant Returns T Type Parameters T SetModifyBy<T>(T, string, Instant) public static T SetModifyBy<T>(this T trackable, string author, Instant now) where T : class, ITrackable Parameters trackable T author string now Instant Returns T Type Parameters T"
  },
  "api/MaintenanceChronicle.Data.Interfaces.html": {
    "href": "api/MaintenanceChronicle.Data.Interfaces.html",
    "title": "Namespace MaintenanceChronicle.Data.Interfaces | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Data.Interfaces Classes TrackableExtensions Interfaces ITenant ITrackable"
  },
  "api/MaintenanceChronicle.Data.Migrations.AddedITrackableToEntities.html": {
    "href": "api/MaintenanceChronicle.Data.Migrations.AddedITrackableToEntities.html",
    "title": "Class AddedITrackableToEntities | MaintenanceChronicleApiDocumantation",
    "keywords": "Class AddedITrackableToEntities Namespace MaintenanceChronicle.Data.Migrations Assembly MaintenanceChronicle.Data.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20241107211618_AddedITrackableToEntities\")] public class AddedITrackableToEntities : Migration Inheritance object Migration AddedITrackableToEntities Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/MaintenanceChronicle.Data.Migrations.AddedLocationContactUser.html": {
    "href": "api/MaintenanceChronicle.Data.Migrations.AddedLocationContactUser.html",
    "title": "Class AddedLocationContactUser | MaintenanceChronicleApiDocumantation",
    "keywords": "Class AddedLocationContactUser Namespace MaintenanceChronicle.Data.Migrations Assembly MaintenanceChronicle.Data.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20241217084713_AddedLocationContactUser\")] public class AddedLocationContactUser : Migration Inheritance object Migration AddedLocationContactUser Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/MaintenanceChronicle.Data.Migrations.AddedTenantAndPutTenantIdToEntities.html": {
    "href": "api/MaintenanceChronicle.Data.Migrations.AddedTenantAndPutTenantIdToEntities.html",
    "title": "Class AddedTenantAndPutTenantIdToEntities | MaintenanceChronicleApiDocumantation",
    "keywords": "Class AddedTenantAndPutTenantIdToEntities Namespace MaintenanceChronicle.Data.Migrations Assembly MaintenanceChronicle.Data.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20241102210359_AddedTenantAndPutTenantIdToEntities\")] public class AddedTenantAndPutTenantIdToEntities : Migration Inheritance object Migration AddedTenantAndPutTenantIdToEntities Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/MaintenanceChronicle.Data.Migrations.CustomerAdded.html": {
    "href": "api/MaintenanceChronicle.Data.Migrations.CustomerAdded.html",
    "title": "Class CustomerAdded | MaintenanceChronicleApiDocumantation",
    "keywords": "Class CustomerAdded Namespace MaintenanceChronicle.Data.Migrations Assembly MaintenanceChronicle.Data.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20241203090855_CustomerAdded\")] public class CustomerAdded : Migration Inheritance object Migration CustomerAdded Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/MaintenanceChronicle.Data.Migrations.Init.html": {
    "href": "api/MaintenanceChronicle.Data.Migrations.Init.html",
    "title": "Class Init | MaintenanceChronicleApiDocumantation",
    "keywords": "Class Init Namespace MaintenanceChronicle.Data.Migrations Assembly MaintenanceChronicle.Data.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20240911094935_Init\")] public class Init : Migration Inheritance object Migration Init Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/MaintenanceChronicle.Data.Migrations.LocationEntityAdded.html": {
    "href": "api/MaintenanceChronicle.Data.Migrations.LocationEntityAdded.html",
    "title": "Class LocationEntityAdded | MaintenanceChronicleApiDocumantation",
    "keywords": "Class LocationEntityAdded Namespace MaintenanceChronicle.Data.Migrations Assembly MaintenanceChronicle.Data.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20241213124411_LocationEntityAdded\")] public class LocationEntityAdded : Migration Inheritance object Migration LocationEntityAdded Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/MaintenanceChronicle.Data.Migrations.MachineAdded.html": {
    "href": "api/MaintenanceChronicle.Data.Migrations.MachineAdded.html",
    "title": "Class MachineAdded | MaintenanceChronicleApiDocumantation",
    "keywords": "Class MachineAdded Namespace MaintenanceChronicle.Data.Migrations Assembly MaintenanceChronicle.Data.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20241219095945_MachineAdded\")] public class MachineAdded : Migration Inheritance object Migration MachineAdded Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/MaintenanceChronicle.Data.Migrations.RolesAdded.html": {
    "href": "api/MaintenanceChronicle.Data.Migrations.RolesAdded.html",
    "title": "Class RolesAdded | MaintenanceChronicleApiDocumantation",
    "keywords": "Class RolesAdded Namespace MaintenanceChronicle.Data.Migrations Assembly MaintenanceChronicle.Data.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20241109154439_RolesAdded\")] public class RolesAdded : Migration Inheritance object Migration RolesAdded Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "api/MaintenanceChronicle.Data.Migrations.html": {
    "href": "api/MaintenanceChronicle.Data.Migrations.html",
    "title": "Namespace MaintenanceChronicle.Data.Migrations | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Data.Migrations Classes AddedITrackableToEntities A base class inherited by each EF Core migration. AddedLocationContactUser A base class inherited by each EF Core migration. AddedTenantAndPutTenantIdToEntities A base class inherited by each EF Core migration. CustomerAdded A base class inherited by each EF Core migration. Init A base class inherited by each EF Core migration. LocationEntityAdded A base class inherited by each EF Core migration. MachineAdded A base class inherited by each EF Core migration. RolesAdded A base class inherited by each EF Core migration."
  },
  "api/MaintenanceChronicle.Data.html": {
    "href": "api/MaintenanceChronicle.Data.html",
    "title": "Namespace MaintenanceChronicle.Data | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Data Classes AppDbContext"
  },
  "api/MaintenanceChronicle.Utilities.Constants.MaintenanceChronicleClaimTypes.html": {
    "href": "api/MaintenanceChronicle.Utilities.Constants.MaintenanceChronicleClaimTypes.html",
    "title": "Class MaintenanceChronicleClaimTypes | MaintenanceChronicleApiDocumantation",
    "keywords": "Class MaintenanceChronicleClaimTypes Namespace MaintenanceChronicle.Utilities.Constants Assembly MaintenanceChronicle.Utilities.dll public class MaintenanceChronicleClaimTypes Inheritance object MaintenanceChronicleClaimTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields TenantIdClaimType public const string TenantIdClaimType = \"https://service-track/claims/tenant-id\" Field Value string"
  },
  "api/MaintenanceChronicle.Utilities.Constants.RoleTypes.html": {
    "href": "api/MaintenanceChronicle.Utilities.Constants.RoleTypes.html",
    "title": "Class RoleTypes | MaintenanceChronicleApiDocumantation",
    "keywords": "Class RoleTypes Namespace MaintenanceChronicle.Utilities.Constants Assembly MaintenanceChronicle.Utilities.dll public class RoleTypes Inheritance object RoleTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Admin public const string Admin = \"Admin\" Field Value string GlobalAdmin public const string GlobalAdmin = \"GlobalAdmin\" Field Value string Technician public const string Technician = \"Technician\" Field Value string"
  },
  "api/MaintenanceChronicle.Utilities.Constants.html": {
    "href": "api/MaintenanceChronicle.Utilities.Constants.html",
    "title": "Namespace MaintenanceChronicle.Utilities.Constants | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Utilities.Constants Classes MaintenanceChronicleClaimTypes RoleTypes"
  },
  "api/MaintenanceChronicle.Utilities.Enum.EnumExtensions.html": {
    "href": "api/MaintenanceChronicle.Utilities.Enum.EnumExtensions.html",
    "title": "Class EnumExtensions | MaintenanceChronicleApiDocumantation",
    "keywords": "Class EnumExtensions Namespace MaintenanceChronicle.Utilities.Enum Assembly MaintenanceChronicle.Utilities.dll public static class EnumExtensions Inheritance object EnumExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetErrorMessage(Enum) public static string GetErrorMessage(this Enum value) Parameters value Enum Returns string"
  },
  "api/MaintenanceChronicle.Utilities.Enum.html": {
    "href": "api/MaintenanceChronicle.Utilities.Enum.html",
    "title": "Namespace MaintenanceChronicle.Utilities.Enum | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Utilities.Enum Classes EnumExtensions"
  },
  "api/MaintenanceChronicle.Utilities.Error.BadRequestException.html": {
    "href": "api/MaintenanceChronicle.Utilities.Error.BadRequestException.html",
    "title": "Class BadRequestException | MaintenanceChronicleApiDocumantation",
    "keywords": "Class BadRequestException Namespace MaintenanceChronicle.Utilities.Error Assembly MaintenanceChronicle.Utilities.dll public class BadRequestException : Exception, ISerializable Inheritance object Exception BadRequestException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BadRequestException(ErrorType) public BadRequestException(ErrorType errorType) Parameters errorType ErrorType Properties ErrorType public ErrorType ErrorType { get; } Property Value ErrorType"
  },
  "api/MaintenanceChronicle.Utilities.Error.ErrorMessageAttribute.html": {
    "href": "api/MaintenanceChronicle.Utilities.Error.ErrorMessageAttribute.html",
    "title": "Class ErrorMessageAttribute | MaintenanceChronicleApiDocumantation",
    "keywords": "Class ErrorMessageAttribute Namespace MaintenanceChronicle.Utilities.Error Assembly MaintenanceChronicle.Utilities.dll public class ErrorMessageAttribute : Attribute Inheritance object Attribute ErrorMessageAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ErrorMessageAttribute(string) public ErrorMessageAttribute(string message) Parameters message string Properties Message public string Message { get; } Property Value string"
  },
  "api/MaintenanceChronicle.Utilities.Error.ErrorType.html": {
    "href": "api/MaintenanceChronicle.Utilities.Error.ErrorType.html",
    "title": "Enum ErrorType | MaintenanceChronicleApiDocumantation",
    "keywords": "Enum ErrorType Namespace MaintenanceChronicle.Utilities.Error Assembly MaintenanceChronicle.Utilities.dll public enum ErrorType Extension Methods EnumExtensions.GetErrorMessage(Enum) Fields [ErrorMessage(\"Sorry this customer doesn't exist!\")] CustomerNotFound = 9 [ErrorMessage(\"User with this email already exists!\")] EmailAlreadyExists = 0 [ErrorMessage(\"Sorry this token is invalid!\")] InvalidEmailConfirmationToken = 4 [ErrorMessage(\"Sorry your identity couldn't be accessed!\")] InvalidIdentityCookie = 7 [ErrorMessage(\"Wrong password!\")] InvalidPassword = 3 [ErrorMessage(\"Sorry this location doesn't exist!\")] LocationNotFound = 11 [ErrorMessage(\"Sorry this machine doesn't exist!\")] MachineNotFound = 12 [ErrorMessage(\"Name must be unique!\")] NameMustBeUnique = 5 [ErrorMessage(\"Sorry this password doesn't meet our requirements!\")] PasswordDoesNotMeetRequirements = 2 [ErrorMessage(\"Sorry this role doesn't exist!\")] RoleNotFound = 8 [ErrorMessage(\"Sorry this tenant doesn't exist!\")] TenantNotFound = 6 [ErrorMessage(\"Sorry this user doesn't exist!\")] UserNotFound = 1 [ErrorMessage(\"Sorry you don't have access to this tenant!\")] UserNotInTenant = 10"
  },
  "api/MaintenanceChronicle.Utilities.Error.ExceptionMiddleware.html": {
    "href": "api/MaintenanceChronicle.Utilities.Error.ExceptionMiddleware.html",
    "title": "Class ExceptionMiddleware | MaintenanceChronicleApiDocumantation",
    "keywords": "Class ExceptionMiddleware Namespace MaintenanceChronicle.Utilities.Error Assembly MaintenanceChronicle.Utilities.dll public class ExceptionMiddleware Inheritance object ExceptionMiddleware Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ExceptionMiddleware(ILogger<ExceptionMiddleware>, RequestDelegate) public ExceptionMiddleware(ILogger<ExceptionMiddleware> logger, RequestDelegate next) Parameters logger ILogger<ExceptionMiddleware> next RequestDelegate Methods InvokeAsync(HttpContext) public Task InvokeAsync(HttpContext context) Parameters context HttpContext Returns Task"
  },
  "api/MaintenanceChronicle.Utilities.Error.InternalServerException.html": {
    "href": "api/MaintenanceChronicle.Utilities.Error.InternalServerException.html",
    "title": "Class InternalServerException | MaintenanceChronicleApiDocumantation",
    "keywords": "Class InternalServerException Namespace MaintenanceChronicle.Utilities.Error Assembly MaintenanceChronicle.Utilities.dll public class InternalServerException : Exception, ISerializable Inheritance object Exception InternalServerException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InternalServerException(List<string>) public InternalServerException(List<string> errors) Parameters errors List<string> InternalServerException(string) public InternalServerException(string error) Parameters error string Properties Errors public List<string> Errors { get; } Property Value List<string>"
  },
  "api/MaintenanceChronicle.Utilities.Error.html": {
    "href": "api/MaintenanceChronicle.Utilities.Error.html",
    "title": "Namespace MaintenanceChronicle.Utilities.Error | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Utilities.Error Classes BadRequestException ErrorMessageAttribute ExceptionMiddleware InternalServerException Enums ErrorType"
  },
  "api/MaintenanceChronicle.Utilities.Helpers.ICurrentTenantProvider.html": {
    "href": "api/MaintenanceChronicle.Utilities.Helpers.ICurrentTenantProvider.html",
    "title": "Interface ICurrentTenantProvider | MaintenanceChronicleApiDocumantation",
    "keywords": "Interface ICurrentTenantProvider Namespace MaintenanceChronicle.Utilities.Helpers Assembly MaintenanceChronicle.Utilities.dll public interface ICurrentTenantProvider Properties TenantId Guid TenantId { get; } Property Value Guid"
  },
  "api/MaintenanceChronicle.Utilities.Helpers.IdentityCookieExtension.html": {
    "href": "api/MaintenanceChronicle.Utilities.Helpers.IdentityCookieExtension.html",
    "title": "Class IdentityCookieExtension | MaintenanceChronicleApiDocumantation",
    "keywords": "Class IdentityCookieExtension Namespace MaintenanceChronicle.Utilities.Helpers Assembly MaintenanceChronicle.Utilities.dll public static class IdentityCookieExtension Inheritance object IdentityCookieExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetTenantId(ClaimsPrincipal) public static string GetTenantId(this ClaimsPrincipal claimsPrincipal) Parameters claimsPrincipal ClaimsPrincipal Returns string GetUserId(ClaimsPrincipal) public static string GetUserId(this ClaimsPrincipal claimsPrincipal) Parameters claimsPrincipal ClaimsPrincipal Returns string"
  },
  "api/MaintenanceChronicle.Utilities.Helpers.NormalizeStringExtension.html": {
    "href": "api/MaintenanceChronicle.Utilities.Helpers.NormalizeStringExtension.html",
    "title": "Class NormalizeStringExtension | MaintenanceChronicleApiDocumantation",
    "keywords": "Class NormalizeStringExtension Namespace MaintenanceChronicle.Utilities.Helpers Assembly MaintenanceChronicle.Utilities.dll public static class NormalizeStringExtension Inheritance object NormalizeStringExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods NormalizeToUpper(string) public static string NormalizeToUpper(this string value) Parameters value string Returns string"
  },
  "api/MaintenanceChronicle.Utilities.Helpers.html": {
    "href": "api/MaintenanceChronicle.Utilities.Helpers.html",
    "title": "Namespace MaintenanceChronicle.Utilities.Helpers | MaintenanceChronicleApiDocumantation",
    "keywords": "Namespace MaintenanceChronicle.Utilities.Helpers Classes IdentityCookieExtension NormalizeStringExtension Interfaces ICurrentTenantProvider"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | MaintenanceChronicleApiDocumantation",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | MaintenanceChronicleApiDocumantation",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | MaintenanceChronicleApiDocumantation",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}