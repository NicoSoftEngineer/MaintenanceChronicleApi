### YamlMime:ManagedReference
items:
- uid: MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler
  commentId: T:MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler
  id: DeleteCustomerCommandHandler
  parent: MaintenanceChronicle.Application.Customers.Commands
  children:
  - MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler.#ctor(MaintenanceChronicle.Data.AppDbContext,NodaTime.IClock)
  - MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler.Handle(MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand{MaintenanceChronicle.Data.Entities.Business.Customer},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: DeleteCustomerCommandHandler
  nameWithType: DeleteCustomerCommandHandler
  fullName: MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler
  type: Class
  source:
    remote:
      path: src/MaintenanceChronicle.Application/Customers/Commands/DeleteCustomerCommandHandler.cs
      branch: dev
      repo: https://github.com/NicoSoftEngineer/ServiceTrackApi.git
    id: DeleteCustomerCommandHandler
    path: ../MaintenanceChronicleApi/src/MaintenanceChronicle.Application/Customers/Commands/DeleteCustomerCommandHandler.cs
    startLine: 10
  assemblies:
  - MaintenanceChronicle.Application
  namespace: MaintenanceChronicle.Application.Customers.Commands
  syntax:
    content: 'public class DeleteCustomerCommandHandler : IRequestHandler<DeleteEntityByIdCommand<Customer>>'
    content.vb: Public Class DeleteCustomerCommandHandler Implements IRequestHandler(Of DeleteEntityByIdCommand(Of Customer))
  inheritance:
  - System.Object
  implements:
  - MediatR.IRequestHandler{MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand{MaintenanceChronicle.Data.Entities.Business.Customer}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler.#ctor(MaintenanceChronicle.Data.AppDbContext,NodaTime.IClock)
  commentId: M:MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler.#ctor(MaintenanceChronicle.Data.AppDbContext,NodaTime.IClock)
  id: '#ctor(MaintenanceChronicle.Data.AppDbContext,NodaTime.IClock)'
  parent: MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler
  langs:
  - csharp
  - vb
  name: DeleteCustomerCommandHandler(AppDbContext, IClock)
  nameWithType: DeleteCustomerCommandHandler.DeleteCustomerCommandHandler(AppDbContext, IClock)
  fullName: MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler.DeleteCustomerCommandHandler(MaintenanceChronicle.Data.AppDbContext, NodaTime.IClock)
  type: Constructor
  source:
    remote:
      path: src/MaintenanceChronicle.Application/Customers/Commands/DeleteCustomerCommandHandler.cs
      branch: dev
      repo: https://github.com/NicoSoftEngineer/ServiceTrackApi.git
    id: .ctor
    path: ../MaintenanceChronicleApi/src/MaintenanceChronicle.Application/Customers/Commands/DeleteCustomerCommandHandler.cs
    startLine: 10
  assemblies:
  - MaintenanceChronicle.Application
  namespace: MaintenanceChronicle.Application.Customers.Commands
  syntax:
    content: public DeleteCustomerCommandHandler(AppDbContext dbContext, IClock clock)
    parameters:
    - id: dbContext
      type: MaintenanceChronicle.Data.AppDbContext
    - id: clock
      type: NodaTime.IClock
    content.vb: Public Sub New(dbContext As AppDbContext, clock As IClock)
  overload: MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler.#ctor*
  nameWithType.vb: DeleteCustomerCommandHandler.New(AppDbContext, IClock)
  fullName.vb: MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler.New(MaintenanceChronicle.Data.AppDbContext, NodaTime.IClock)
  name.vb: New(AppDbContext, IClock)
- uid: MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler.Handle(MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand{MaintenanceChronicle.Data.Entities.Business.Customer},System.Threading.CancellationToken)
  commentId: M:MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler.Handle(MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand{MaintenanceChronicle.Data.Entities.Business.Customer},System.Threading.CancellationToken)
  id: Handle(MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand{MaintenanceChronicle.Data.Entities.Business.Customer},System.Threading.CancellationToken)
  parent: MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler
  langs:
  - csharp
  - vb
  name: Handle(DeleteEntityByIdCommand<Customer>, CancellationToken)
  nameWithType: DeleteCustomerCommandHandler.Handle(DeleteEntityByIdCommand<Customer>, CancellationToken)
  fullName: MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler.Handle(MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand<MaintenanceChronicle.Data.Entities.Business.Customer>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/MaintenanceChronicle.Application/Customers/Commands/DeleteCustomerCommandHandler.cs
      branch: dev
      repo: https://github.com/NicoSoftEngineer/ServiceTrackApi.git
    id: Handle
    path: ../MaintenanceChronicleApi/src/MaintenanceChronicle.Application/Customers/Commands/DeleteCustomerCommandHandler.cs
    startLine: 12
  assemblies:
  - MaintenanceChronicle.Application
  namespace: MaintenanceChronicle.Application.Customers.Commands
  summary: Handles a request
  example: []
  syntax:
    content: public Task Handle(DeleteEntityByIdCommand<Customer> request, CancellationToken cancellationToken)
    parameters:
    - id: request
      type: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand{MaintenanceChronicle.Data.Entities.Business.Customer}
      description: The request
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task
      description: Response from the request
    content.vb: Public Function Handle(request As DeleteEntityByIdCommand(Of Customer), cancellationToken As CancellationToken) As Task
  overload: MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler.Handle*
  implements:
  - MediatR.IRequestHandler{MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand{MaintenanceChronicle.Data.Entities.Business.Customer}}.Handle(MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand{MaintenanceChronicle.Data.Entities.Business.Customer},System.Threading.CancellationToken)
  nameWithType.vb: DeleteCustomerCommandHandler.Handle(DeleteEntityByIdCommand(Of Customer), CancellationToken)
  fullName.vb: MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler.Handle(MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand(Of MaintenanceChronicle.Data.Entities.Business.Customer), System.Threading.CancellationToken)
  name.vb: Handle(DeleteEntityByIdCommand(Of Customer), CancellationToken)
references:
- uid: MaintenanceChronicle.Application.Customers.Commands
  commentId: N:MaintenanceChronicle.Application.Customers.Commands
  href: MaintenanceChronicle.html
  name: MaintenanceChronicle.Application.Customers.Commands
  nameWithType: MaintenanceChronicle.Application.Customers.Commands
  fullName: MaintenanceChronicle.Application.Customers.Commands
  spec.csharp:
  - uid: MaintenanceChronicle
    name: MaintenanceChronicle
    href: MaintenanceChronicle.html
  - name: .
  - uid: MaintenanceChronicle.Application
    name: Application
    href: MaintenanceChronicle.Application.html
  - name: .
  - uid: MaintenanceChronicle.Application.Customers
    name: Customers
    href: MaintenanceChronicle.Application.Customers.html
  - name: .
  - uid: MaintenanceChronicle.Application.Customers.Commands
    name: Commands
    href: MaintenanceChronicle.Application.Customers.Commands.html
  spec.vb:
  - uid: MaintenanceChronicle
    name: MaintenanceChronicle
    href: MaintenanceChronicle.html
  - name: .
  - uid: MaintenanceChronicle.Application
    name: Application
    href: MaintenanceChronicle.Application.html
  - name: .
  - uid: MaintenanceChronicle.Application.Customers
    name: Customers
    href: MaintenanceChronicle.Application.Customers.html
  - name: .
  - uid: MaintenanceChronicle.Application.Customers.Commands
    name: Commands
    href: MaintenanceChronicle.Application.Customers.Commands.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MediatR.IRequestHandler{MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand{MaintenanceChronicle.Data.Entities.Business.Customer}}
  commentId: T:MediatR.IRequestHandler{MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand{MaintenanceChronicle.Data.Entities.Business.Customer}}
  parent: MediatR
  definition: MediatR.IRequestHandler`1
  href: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand-1.html
  name: IRequestHandler<DeleteEntityByIdCommand<Customer>>
  nameWithType: IRequestHandler<DeleteEntityByIdCommand<Customer>>
  fullName: MediatR.IRequestHandler<MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand<MaintenanceChronicle.Data.Entities.Business.Customer>>
  nameWithType.vb: IRequestHandler(Of DeleteEntityByIdCommand(Of Customer))
  fullName.vb: MediatR.IRequestHandler(Of MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand(Of MaintenanceChronicle.Data.Entities.Business.Customer))
  name.vb: IRequestHandler(Of DeleteEntityByIdCommand(Of Customer))
  spec.csharp:
  - uid: MediatR.IRequestHandler`1
    name: IRequestHandler
    isExternal: true
  - name: <
  - uid: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand`1
    name: DeleteEntityByIdCommand
    href: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand-1.html
  - name: <
  - uid: MaintenanceChronicle.Data.Entities.Business.Customer
    name: Customer
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`1
    name: IRequestHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand`1
    name: DeleteEntityByIdCommand
    href: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: MaintenanceChronicle.Data.Entities.Business.Customer
    name: Customer
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MediatR.IRequestHandler`1
  commentId: T:MediatR.IRequestHandler`1
  isExternal: true
  name: IRequestHandler<TRequest>
  nameWithType: IRequestHandler<TRequest>
  fullName: MediatR.IRequestHandler<TRequest>
  nameWithType.vb: IRequestHandler(Of TRequest)
  fullName.vb: MediatR.IRequestHandler(Of TRequest)
  name.vb: IRequestHandler(Of TRequest)
  spec.csharp:
  - uid: MediatR.IRequestHandler`1
    name: IRequestHandler
    isExternal: true
  - name: <
  - name: TRequest
  - name: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`1
    name: IRequestHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TRequest
  - name: )
- uid: MediatR
  commentId: N:MediatR
  isExternal: true
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
- uid: MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler.#ctor*
  commentId: Overload:MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler.#ctor
  href: MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler.html#MaintenanceChronicle_Application_Customers_Commands_DeleteCustomerCommandHandler__ctor_MaintenanceChronicle_Data_AppDbContext_NodaTime_IClock_
  name: DeleteCustomerCommandHandler
  nameWithType: DeleteCustomerCommandHandler.DeleteCustomerCommandHandler
  fullName: MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler.DeleteCustomerCommandHandler
  nameWithType.vb: DeleteCustomerCommandHandler.New
  fullName.vb: MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler.New
  name.vb: New
- uid: MaintenanceChronicle.Data.AppDbContext
  commentId: T:MaintenanceChronicle.Data.AppDbContext
  parent: MaintenanceChronicle.Data
  href: MaintenanceChronicle.Data.AppDbContext.html
  name: AppDbContext
  nameWithType: AppDbContext
  fullName: MaintenanceChronicle.Data.AppDbContext
- uid: NodaTime.IClock
  commentId: T:NodaTime.IClock
  parent: NodaTime
  isExternal: true
  href: https://github.com/jskeet/nodatime/blob/4d0e4c04dd5f09304a7e53a0675dce1597ea0143/src/NodaTime/IClock.cs
  name: IClock
  nameWithType: IClock
  fullName: NodaTime.IClock
- uid: MaintenanceChronicle.Data
  commentId: N:MaintenanceChronicle.Data
  href: MaintenanceChronicle.html
  name: MaintenanceChronicle.Data
  nameWithType: MaintenanceChronicle.Data
  fullName: MaintenanceChronicle.Data
  spec.csharp:
  - uid: MaintenanceChronicle
    name: MaintenanceChronicle
    href: MaintenanceChronicle.html
  - name: .
  - uid: MaintenanceChronicle.Data
    name: Data
    href: MaintenanceChronicle.Data.html
  spec.vb:
  - uid: MaintenanceChronicle
    name: MaintenanceChronicle
    href: MaintenanceChronicle.html
  - name: .
  - uid: MaintenanceChronicle.Data
    name: Data
    href: MaintenanceChronicle.Data.html
- uid: NodaTime
  commentId: N:NodaTime
  isExternal: true
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler.Handle*
  commentId: Overload:MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler.Handle
  href: MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler.html#MaintenanceChronicle_Application_Customers_Commands_DeleteCustomerCommandHandler_Handle_MaintenanceChronicle_Application_Contracts_Utils_Commands_DeleteEntityByIdCommand_MaintenanceChronicle_Data_Entities_Business_Customer__System_Threading_CancellationToken_
  name: Handle
  nameWithType: DeleteCustomerCommandHandler.Handle
  fullName: MaintenanceChronicle.Application.Customers.Commands.DeleteCustomerCommandHandler.Handle
- uid: MediatR.IRequestHandler{MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand{MaintenanceChronicle.Data.Entities.Business.Customer}}.Handle(MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand{MaintenanceChronicle.Data.Entities.Business.Customer},System.Threading.CancellationToken)
  commentId: M:MediatR.IRequestHandler{MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand{MaintenanceChronicle.Data.Entities.Business.Customer}}.Handle(MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand{MaintenanceChronicle.Data.Entities.Business.Customer},System.Threading.CancellationToken)
  parent: MediatR.IRequestHandler{MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand{MaintenanceChronicle.Data.Entities.Business.Customer}}
  definition: MediatR.IRequestHandler`1.Handle(`0,System.Threading.CancellationToken)
  href: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand-1.html
  name: Handle(DeleteEntityByIdCommand<Customer>, CancellationToken)
  nameWithType: IRequestHandler<DeleteEntityByIdCommand<Customer>>.Handle(DeleteEntityByIdCommand<Customer>, CancellationToken)
  fullName: MediatR.IRequestHandler<MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand<MaintenanceChronicle.Data.Entities.Business.Customer>>.Handle(MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand<MaintenanceChronicle.Data.Entities.Business.Customer>, System.Threading.CancellationToken)
  nameWithType.vb: IRequestHandler(Of DeleteEntityByIdCommand(Of Customer)).Handle(DeleteEntityByIdCommand(Of Customer), CancellationToken)
  fullName.vb: MediatR.IRequestHandler(Of MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand(Of MaintenanceChronicle.Data.Entities.Business.Customer)).Handle(MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand(Of MaintenanceChronicle.Data.Entities.Business.Customer), System.Threading.CancellationToken)
  name.vb: Handle(DeleteEntityByIdCommand(Of Customer), CancellationToken)
  spec.csharp:
  - uid: MediatR.IRequestHandler{MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand{MaintenanceChronicle.Data.Entities.Business.Customer}}.Handle(MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand{MaintenanceChronicle.Data.Entities.Business.Customer},System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - uid: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand`1
    name: DeleteEntityByIdCommand
    href: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand-1.html
  - name: <
  - uid: MaintenanceChronicle.Data.Entities.Business.Customer
    name: Customer
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MediatR.IRequestHandler{MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand{MaintenanceChronicle.Data.Entities.Business.Customer}}.Handle(MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand{MaintenanceChronicle.Data.Entities.Business.Customer},System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - uid: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand`1
    name: DeleteEntityByIdCommand
    href: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: MaintenanceChronicle.Data.Entities.Business.Customer
    name: Customer
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand{MaintenanceChronicle.Data.Entities.Business.Customer}
  commentId: T:MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand{MaintenanceChronicle.Data.Entities.Business.Customer}
  parent: MaintenanceChronicle.Application.Contracts.Utils.Commands
  definition: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand`1
  href: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand-1.html
  name: DeleteEntityByIdCommand<Customer>
  nameWithType: DeleteEntityByIdCommand<Customer>
  fullName: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand<MaintenanceChronicle.Data.Entities.Business.Customer>
  nameWithType.vb: DeleteEntityByIdCommand(Of Customer)
  fullName.vb: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand(Of MaintenanceChronicle.Data.Entities.Business.Customer)
  name.vb: DeleteEntityByIdCommand(Of Customer)
  spec.csharp:
  - uid: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand`1
    name: DeleteEntityByIdCommand
    href: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand-1.html
  - name: <
  - uid: MaintenanceChronicle.Data.Entities.Business.Customer
    name: Customer
  - name: '>'
  spec.vb:
  - uid: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand`1
    name: DeleteEntityByIdCommand
    href: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: MaintenanceChronicle.Data.Entities.Business.Customer
    name: Customer
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: MediatR.IRequestHandler`1.Handle(`0,System.Threading.CancellationToken)
  commentId: M:MediatR.IRequestHandler`1.Handle(`0,System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: Handle(TRequest, CancellationToken)
  nameWithType: IRequestHandler<TRequest>.Handle(TRequest, CancellationToken)
  fullName: MediatR.IRequestHandler<TRequest>.Handle(TRequest, System.Threading.CancellationToken)
  nameWithType.vb: IRequestHandler(Of TRequest).Handle(TRequest, CancellationToken)
  fullName.vb: MediatR.IRequestHandler(Of TRequest).Handle(TRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: MediatR.IRequestHandler`1.Handle(`0,System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MediatR.IRequestHandler`1.Handle(`0,System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand`1
  commentId: T:MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand`1
  href: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand-1.html
  name: DeleteEntityByIdCommand<TEntity>
  nameWithType: DeleteEntityByIdCommand<TEntity>
  fullName: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand<TEntity>
  nameWithType.vb: DeleteEntityByIdCommand(Of TEntity)
  fullName.vb: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand(Of TEntity)
  name.vb: DeleteEntityByIdCommand(Of TEntity)
  spec.csharp:
  - uid: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand`1
    name: DeleteEntityByIdCommand
    href: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand-1.html
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand`1
    name: DeleteEntityByIdCommand
    href: MaintenanceChronicle.Application.Contracts.Utils.Commands.DeleteEntityByIdCommand-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: MaintenanceChronicle.Application.Contracts.Utils.Commands
  commentId: N:MaintenanceChronicle.Application.Contracts.Utils.Commands
  href: MaintenanceChronicle.html
  name: MaintenanceChronicle.Application.Contracts.Utils.Commands
  nameWithType: MaintenanceChronicle.Application.Contracts.Utils.Commands
  fullName: MaintenanceChronicle.Application.Contracts.Utils.Commands
  spec.csharp:
  - uid: MaintenanceChronicle
    name: MaintenanceChronicle
    href: MaintenanceChronicle.html
  - name: .
  - uid: MaintenanceChronicle.Application
    name: Application
    href: MaintenanceChronicle.Application.html
  - name: .
  - uid: MaintenanceChronicle.Application.Contracts
    name: Contracts
    href: MaintenanceChronicle.Application.Contracts.html
  - name: .
  - uid: MaintenanceChronicle.Application.Contracts.Utils
    name: Utils
    href: MaintenanceChronicle.Application.Contracts.Utils.html
  - name: .
  - uid: MaintenanceChronicle.Application.Contracts.Utils.Commands
    name: Commands
    href: MaintenanceChronicle.Application.Contracts.Utils.Commands.html
  spec.vb:
  - uid: MaintenanceChronicle
    name: MaintenanceChronicle
    href: MaintenanceChronicle.html
  - name: .
  - uid: MaintenanceChronicle.Application
    name: Application
    href: MaintenanceChronicle.Application.html
  - name: .
  - uid: MaintenanceChronicle.Application.Contracts
    name: Contracts
    href: MaintenanceChronicle.Application.Contracts.html
  - name: .
  - uid: MaintenanceChronicle.Application.Contracts.Utils
    name: Utils
    href: MaintenanceChronicle.Application.Contracts.Utils.html
  - name: .
  - uid: MaintenanceChronicle.Application.Contracts.Utils.Commands
    name: Commands
    href: MaintenanceChronicle.Application.Contracts.Utils.Commands.html
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
