### YamlMime:ManagedReference
items:
- uid: MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler
  commentId: T:MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler
  id: UpdateLocationCommandHandler
  parent: MaintenanceChronicle.Application.Locations.Commands
  children:
  - MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler.#ctor(MaintenanceChronicle.Data.AppDbContext,NodaTime.IClock)
  - MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler.Handle(MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: UpdateLocationCommandHandler
  nameWithType: UpdateLocationCommandHandler
  fullName: MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler
  type: Class
  source:
    remote:
      path: src/MaintenanceChronicle.Application/Locations/Commands/UpdateLocationCommandHandler.cs
      branch: dev
      repo: https://github.com/NicoSoftEngineer/ServiceTrackApi.git
    id: UpdateLocationCommandHandler
    path: ../MaintenanceChronicleApi/src/MaintenanceChronicle.Application/Locations/Commands/UpdateLocationCommandHandler.cs
    startLine: 10
  assemblies:
  - MaintenanceChronicle.Application
  namespace: MaintenanceChronicle.Application.Locations.Commands
  syntax:
    content: 'public class UpdateLocationCommandHandler : IRequestHandler<UpdateLocationCommand, ManageLocationDetailDto>'
    content.vb: Public Class UpdateLocationCommandHandler Implements IRequestHandler(Of UpdateLocationCommand, ManageLocationDetailDto)
  inheritance:
  - System.Object
  implements:
  - MediatR.IRequestHandler{MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand,MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler.#ctor(MaintenanceChronicle.Data.AppDbContext,NodaTime.IClock)
  commentId: M:MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler.#ctor(MaintenanceChronicle.Data.AppDbContext,NodaTime.IClock)
  id: '#ctor(MaintenanceChronicle.Data.AppDbContext,NodaTime.IClock)'
  parent: MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler
  langs:
  - csharp
  - vb
  name: UpdateLocationCommandHandler(AppDbContext, IClock)
  nameWithType: UpdateLocationCommandHandler.UpdateLocationCommandHandler(AppDbContext, IClock)
  fullName: MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler.UpdateLocationCommandHandler(MaintenanceChronicle.Data.AppDbContext, NodaTime.IClock)
  type: Constructor
  source:
    remote:
      path: src/MaintenanceChronicle.Application/Locations/Commands/UpdateLocationCommandHandler.cs
      branch: dev
      repo: https://github.com/NicoSoftEngineer/ServiceTrackApi.git
    id: .ctor
    path: ../MaintenanceChronicleApi/src/MaintenanceChronicle.Application/Locations/Commands/UpdateLocationCommandHandler.cs
    startLine: 10
  assemblies:
  - MaintenanceChronicle.Application
  namespace: MaintenanceChronicle.Application.Locations.Commands
  syntax:
    content: public UpdateLocationCommandHandler(AppDbContext dbContext, IClock clock)
    parameters:
    - id: dbContext
      type: MaintenanceChronicle.Data.AppDbContext
    - id: clock
      type: NodaTime.IClock
    content.vb: Public Sub New(dbContext As AppDbContext, clock As IClock)
  overload: MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler.#ctor*
  nameWithType.vb: UpdateLocationCommandHandler.New(AppDbContext, IClock)
  fullName.vb: MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler.New(MaintenanceChronicle.Data.AppDbContext, NodaTime.IClock)
  name.vb: New(AppDbContext, IClock)
- uid: MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler.Handle(MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand,System.Threading.CancellationToken)
  commentId: M:MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler.Handle(MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand,System.Threading.CancellationToken)
  id: Handle(MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand,System.Threading.CancellationToken)
  parent: MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler
  langs:
  - csharp
  - vb
  name: Handle(UpdateLocationCommand, CancellationToken)
  nameWithType: UpdateLocationCommandHandler.Handle(UpdateLocationCommand, CancellationToken)
  fullName: MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler.Handle(MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/MaintenanceChronicle.Application/Locations/Commands/UpdateLocationCommandHandler.cs
      branch: dev
      repo: https://github.com/NicoSoftEngineer/ServiceTrackApi.git
    id: Handle
    path: ../MaintenanceChronicleApi/src/MaintenanceChronicle.Application/Locations/Commands/UpdateLocationCommandHandler.cs
    startLine: 12
  assemblies:
  - MaintenanceChronicle.Application
  namespace: MaintenanceChronicle.Application.Locations.Commands
  summary: Handles a request
  example: []
  syntax:
    content: public Task<ManageLocationDetailDto> Handle(UpdateLocationCommand request, CancellationToken cancellationToken)
    parameters:
    - id: request
      type: MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand
      description: The request
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token
    return:
      type: System.Threading.Tasks.Task{MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto}
      description: Response from the request
    content.vb: Public Function Handle(request As UpdateLocationCommand, cancellationToken As CancellationToken) As Task(Of ManageLocationDetailDto)
  overload: MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler.Handle*
  implements:
  - MediatR.IRequestHandler{MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand,MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto}.Handle(MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand,System.Threading.CancellationToken)
references:
- uid: MaintenanceChronicle.Application.Locations.Commands
  commentId: N:MaintenanceChronicle.Application.Locations.Commands
  href: MaintenanceChronicle.html
  name: MaintenanceChronicle.Application.Locations.Commands
  nameWithType: MaintenanceChronicle.Application.Locations.Commands
  fullName: MaintenanceChronicle.Application.Locations.Commands
  spec.csharp:
  - uid: MaintenanceChronicle
    name: MaintenanceChronicle
    href: MaintenanceChronicle.html
  - name: .
  - uid: MaintenanceChronicle.Application
    name: Application
    href: MaintenanceChronicle.Application.html
  - name: .
  - uid: MaintenanceChronicle.Application.Locations
    name: Locations
    href: MaintenanceChronicle.Application.Locations.html
  - name: .
  - uid: MaintenanceChronicle.Application.Locations.Commands
    name: Commands
    href: MaintenanceChronicle.Application.Locations.Commands.html
  spec.vb:
  - uid: MaintenanceChronicle
    name: MaintenanceChronicle
    href: MaintenanceChronicle.html
  - name: .
  - uid: MaintenanceChronicle.Application
    name: Application
    href: MaintenanceChronicle.Application.html
  - name: .
  - uid: MaintenanceChronicle.Application.Locations
    name: Locations
    href: MaintenanceChronicle.Application.Locations.html
  - name: .
  - uid: MaintenanceChronicle.Application.Locations.Commands
    name: Commands
    href: MaintenanceChronicle.Application.Locations.Commands.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MediatR.IRequestHandler{MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand,MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto}
  commentId: T:MediatR.IRequestHandler{MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand,MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto}
  parent: MediatR
  definition: MediatR.IRequestHandler`2
  href: MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand.html
  name: IRequestHandler<UpdateLocationCommand, ManageLocationDetailDto>
  nameWithType: IRequestHandler<UpdateLocationCommand, ManageLocationDetailDto>
  fullName: MediatR.IRequestHandler<MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand, MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto>
  nameWithType.vb: IRequestHandler(Of UpdateLocationCommand, ManageLocationDetailDto)
  fullName.vb: MediatR.IRequestHandler(Of MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand, MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto)
  name.vb: IRequestHandler(Of UpdateLocationCommand, ManageLocationDetailDto)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    isExternal: true
  - name: <
  - uid: MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand
    name: UpdateLocationCommand
    href: MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand.html
  - name: ','
  - name: " "
  - uid: MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto
    name: ManageLocationDetailDto
    href: MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto.html
  - name: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand
    name: UpdateLocationCommand
    href: MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand.html
  - name: ','
  - name: " "
  - uid: MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto
    name: ManageLocationDetailDto
    href: MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MediatR.IRequestHandler`2
  commentId: T:MediatR.IRequestHandler`2
  isExternal: true
  name: IRequestHandler<TRequest, TResponse>
  nameWithType: IRequestHandler<TRequest, TResponse>
  fullName: MediatR.IRequestHandler<TRequest, TResponse>
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse)
  fullName.vb: MediatR.IRequestHandler(Of TRequest, TResponse)
  name.vb: IRequestHandler(Of TRequest, TResponse)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    isExternal: true
  - name: <
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: MediatR.IRequestHandler`2
    name: IRequestHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: )
- uid: MediatR
  commentId: N:MediatR
  isExternal: true
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
- uid: MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler.#ctor*
  commentId: Overload:MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler.#ctor
  href: MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler.html#MaintenanceChronicle_Application_Locations_Commands_UpdateLocationCommandHandler__ctor_MaintenanceChronicle_Data_AppDbContext_NodaTime_IClock_
  name: UpdateLocationCommandHandler
  nameWithType: UpdateLocationCommandHandler.UpdateLocationCommandHandler
  fullName: MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler.UpdateLocationCommandHandler
  nameWithType.vb: UpdateLocationCommandHandler.New
  fullName.vb: MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler.New
  name.vb: New
- uid: MaintenanceChronicle.Data.AppDbContext
  commentId: T:MaintenanceChronicle.Data.AppDbContext
  parent: MaintenanceChronicle.Data
  href: MaintenanceChronicle.Data.AppDbContext.html
  name: AppDbContext
  nameWithType: AppDbContext
  fullName: MaintenanceChronicle.Data.AppDbContext
- uid: NodaTime.IClock
  commentId: T:NodaTime.IClock
  parent: NodaTime
  isExternal: true
  href: https://github.com/jskeet/nodatime/blob/4d0e4c04dd5f09304a7e53a0675dce1597ea0143/src/NodaTime/IClock.cs
  name: IClock
  nameWithType: IClock
  fullName: NodaTime.IClock
- uid: MaintenanceChronicle.Data
  commentId: N:MaintenanceChronicle.Data
  href: MaintenanceChronicle.html
  name: MaintenanceChronicle.Data
  nameWithType: MaintenanceChronicle.Data
  fullName: MaintenanceChronicle.Data
  spec.csharp:
  - uid: MaintenanceChronicle
    name: MaintenanceChronicle
    href: MaintenanceChronicle.html
  - name: .
  - uid: MaintenanceChronicle.Data
    name: Data
    href: MaintenanceChronicle.Data.html
  spec.vb:
  - uid: MaintenanceChronicle
    name: MaintenanceChronicle
    href: MaintenanceChronicle.html
  - name: .
  - uid: MaintenanceChronicle.Data
    name: Data
    href: MaintenanceChronicle.Data.html
- uid: NodaTime
  commentId: N:NodaTime
  isExternal: true
  name: NodaTime
  nameWithType: NodaTime
  fullName: NodaTime
- uid: MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler.Handle*
  commentId: Overload:MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler.Handle
  href: MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler.html#MaintenanceChronicle_Application_Locations_Commands_UpdateLocationCommandHandler_Handle_MaintenanceChronicle_Application_Contracts_Locations_Commands_UpdateLocationCommand_System_Threading_CancellationToken_
  name: Handle
  nameWithType: UpdateLocationCommandHandler.Handle
  fullName: MaintenanceChronicle.Application.Locations.Commands.UpdateLocationCommandHandler.Handle
- uid: MediatR.IRequestHandler{MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand,MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto}.Handle(MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand,System.Threading.CancellationToken)
  commentId: M:MediatR.IRequestHandler{MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand,MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto}.Handle(MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand,System.Threading.CancellationToken)
  parent: MediatR.IRequestHandler{MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand,MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto}
  definition: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
  href: MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand.html
  name: Handle(UpdateLocationCommand, CancellationToken)
  nameWithType: IRequestHandler<UpdateLocationCommand, ManageLocationDetailDto>.Handle(UpdateLocationCommand, CancellationToken)
  fullName: MediatR.IRequestHandler<MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand, MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto>.Handle(MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand, System.Threading.CancellationToken)
  nameWithType.vb: IRequestHandler(Of UpdateLocationCommand, ManageLocationDetailDto).Handle(UpdateLocationCommand, CancellationToken)
  fullName.vb: MediatR.IRequestHandler(Of MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand, MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto).Handle(MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand, System.Threading.CancellationToken)
  spec.csharp:
  - uid: MediatR.IRequestHandler{MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand,MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto}.Handle(MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand,System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - uid: MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand
    name: UpdateLocationCommand
    href: MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MediatR.IRequestHandler{MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand,MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto}.Handle(MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand,System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - uid: MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand
    name: UpdateLocationCommand
    href: MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand
  commentId: T:MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand
  parent: MaintenanceChronicle.Application.Contracts.Locations.Commands
  href: MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand.html
  name: UpdateLocationCommand
  nameWithType: UpdateLocationCommand
  fullName: MaintenanceChronicle.Application.Contracts.Locations.Commands.UpdateLocationCommand
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto}
  commentId: T:System.Threading.Tasks.Task{MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ManageLocationDetailDto>
  nameWithType: Task<ManageLocationDetailDto>
  fullName: System.Threading.Tasks.Task<MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto>
  nameWithType.vb: Task(Of ManageLocationDetailDto)
  fullName.vb: System.Threading.Tasks.Task(Of MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto)
  name.vb: Task(Of ManageLocationDetailDto)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto
    name: ManageLocationDetailDto
    href: MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto
    name: ManageLocationDetailDto
    href: MaintenanceChronicle.Application.Contracts.Locations.Commands.Dto.ManageLocationDetailDto.html
  - name: )
- uid: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
  commentId: M:MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: Handle(TRequest, CancellationToken)
  nameWithType: IRequestHandler<TRequest, TResponse>.Handle(TRequest, CancellationToken)
  fullName: MediatR.IRequestHandler<TRequest, TResponse>.Handle(TRequest, System.Threading.CancellationToken)
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse).Handle(TRequest, CancellationToken)
  fullName.vb: MediatR.IRequestHandler(Of TRequest, TResponse).Handle(TRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MediatR.IRequestHandler`2.Handle(`0,System.Threading.CancellationToken)
    name: Handle
    isExternal: true
  - name: (
  - name: TRequest
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: MaintenanceChronicle.Application.Contracts.Locations.Commands
  commentId: N:MaintenanceChronicle.Application.Contracts.Locations.Commands
  href: MaintenanceChronicle.html
  name: MaintenanceChronicle.Application.Contracts.Locations.Commands
  nameWithType: MaintenanceChronicle.Application.Contracts.Locations.Commands
  fullName: MaintenanceChronicle.Application.Contracts.Locations.Commands
  spec.csharp:
  - uid: MaintenanceChronicle
    name: MaintenanceChronicle
    href: MaintenanceChronicle.html
  - name: .
  - uid: MaintenanceChronicle.Application
    name: Application
    href: MaintenanceChronicle.Application.html
  - name: .
  - uid: MaintenanceChronicle.Application.Contracts
    name: Contracts
    href: MaintenanceChronicle.Application.Contracts.html
  - name: .
  - uid: MaintenanceChronicle.Application.Contracts.Locations
    name: Locations
    href: MaintenanceChronicle.Application.Contracts.Locations.html
  - name: .
  - uid: MaintenanceChronicle.Application.Contracts.Locations.Commands
    name: Commands
    href: MaintenanceChronicle.Application.Contracts.Locations.Commands.html
  spec.vb:
  - uid: MaintenanceChronicle
    name: MaintenanceChronicle
    href: MaintenanceChronicle.html
  - name: .
  - uid: MaintenanceChronicle.Application
    name: Application
    href: MaintenanceChronicle.Application.html
  - name: .
  - uid: MaintenanceChronicle.Application.Contracts
    name: Contracts
    href: MaintenanceChronicle.Application.Contracts.html
  - name: .
  - uid: MaintenanceChronicle.Application.Contracts.Locations
    name: Locations
    href: MaintenanceChronicle.Application.Contracts.Locations.html
  - name: .
  - uid: MaintenanceChronicle.Application.Contracts.Locations.Commands
    name: Commands
    href: MaintenanceChronicle.Application.Contracts.Locations.Commands.html
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
